/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Used with a card of type &#x60;status&#x60; to set the status of the skill. This can be used to show a message to the user while the Skill is processing the data.
 */
@Schema(description = "Used with a card of type `status` to set the status of the skill. This can be used to show a message to the user while the Skill is processing the data.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class SkillCardStatus {
  /**
   * A code for the status of this Skill invocation. By default each of these will have their own accompanied messages. These can be adjusted by setting the &#x60;message&#x60; value on this object.
   */
  public enum CodeEnum {
    INVOKED("invoked"),
    PROCESSING("processing"),
    SUCCESS("success"),
    TRANSIENT_FAILURE("transient_failure"),
    PERMANENT_FAILURE("permanent_failure");

    private String value;

    CodeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static CodeEnum fromValue(String text) {
      for (CodeEnum b : CodeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("code")
  private CodeEnum code = null;

  @JsonProperty("message")
  private String message = null;

  public SkillCardStatus code(CodeEnum code) {
    this.code = code;
    return this;
  }

   /**
   * A code for the status of this Skill invocation. By default each of these will have their own accompanied messages. These can be adjusted by setting the &#x60;message&#x60; value on this object.
   * @return code
  **/
  @Schema(example = "success", required = true, description = "A code for the status of this Skill invocation. By default each of these will have their own accompanied messages. These can be adjusted by setting the `message` value on this object.")
  public CodeEnum getCode() {
    return code;
  }

  public void setCode(CodeEnum code) {
    this.code = code;
  }

  public SkillCardStatus message(String message) {
    this.message = message;
    return this;
  }

   /**
   * A custom message that can be provided with this status. This will be shown in the web app to the end user.
   * @return message
  **/
  @Schema(example = "We're preparing to process your file. Please hold on!", description = "A custom message that can be provided with this status. This will be shown in the web app to the end user.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SkillCardStatus skillCardStatus = (SkillCardStatus) o;
    return Objects.equals(this.code, skillCardStatus.code) &&
        Objects.equals(this.message, skillCardStatus.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SkillCardStatus {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
