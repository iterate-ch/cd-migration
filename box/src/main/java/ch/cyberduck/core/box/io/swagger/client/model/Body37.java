/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Body37
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class Body37 {
  @JsonProperty("message")
  private String message = null;

  /**
   * The state of the task assigned to the user.  * For a task with an &#x60;action&#x60; value of &#x60;complete&#x60; this can be &#x60;incomplete&#x60; or &#x60;completed&#x60;. * For a task with an &#x60;action&#x60; of &#x60;review&#x60; this can be &#x60;incomplete&#x60;, &#x60;approved&#x60;, or &#x60;rejected&#x60;.
   */
  public enum ResolutionStateEnum {
    COMPLETED("completed"),
    INCOMPLETE("incomplete"),
    APPROVED("approved"),
    REJECTED("rejected");

    private String value;

    ResolutionStateEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ResolutionStateEnum fromValue(String text) {
      for (ResolutionStateEnum b : ResolutionStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("resolution_state")
  private ResolutionStateEnum resolutionState = null;

  public Body37 message(String message) {
    this.message = message;
    return this;
  }

   /**
   * An optional message by the assignee that can be added to the task.
   * @return message
  **/
  @Schema(example = "Looks good to me", description = "An optional message by the assignee that can be added to the task.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public Body37 resolutionState(ResolutionStateEnum resolutionState) {
    this.resolutionState = resolutionState;
    return this;
  }

   /**
   * The state of the task assigned to the user.  * For a task with an &#x60;action&#x60; value of &#x60;complete&#x60; this can be &#x60;incomplete&#x60; or &#x60;completed&#x60;. * For a task with an &#x60;action&#x60; of &#x60;review&#x60; this can be &#x60;incomplete&#x60;, &#x60;approved&#x60;, or &#x60;rejected&#x60;.
   * @return resolutionState
  **/
  @Schema(example = "completed", description = "The state of the task assigned to the user.  * For a task with an `action` value of `complete` this can be `incomplete` or `completed`. * For a task with an `action` of `review` this can be `incomplete`, `approved`, or `rejected`.")
  public ResolutionStateEnum getResolutionState() {
    return resolutionState;
  }

  public void setResolutionState(ResolutionStateEnum resolutionState) {
    this.resolutionState = resolutionState;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body37 body37 = (Body37) o;
    return Objects.equals(this.message, body37.message) &&
        Objects.equals(this.resolutionState, body37.resolutionState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, resolutionState);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body37 {\n");
    
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    resolutionState: ").append(toIndentedString(resolutionState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
