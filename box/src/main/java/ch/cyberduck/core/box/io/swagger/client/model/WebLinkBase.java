/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.  Web link objects are treated similarly to file objects, they will also support most actions that apply to regular files.
 */
@Schema(description = "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.  Web link objects are treated similarly to file objects, they will also support most actions that apply to regular files.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class WebLinkBase {
  @JsonProperty("id")
  private String id = null;

  /**
   * &#x60;web_link&#x60;
   */
  public enum TypeEnum {
    LINK("web_link");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("etag")
  private String etag = null;

  public WebLinkBase id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier for this web link
   * @return id
  **/
  @Schema(example = "11446498", description = "The unique identifier for this web link")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public WebLinkBase type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * &#x60;web_link&#x60;
   * @return type
  **/
  @Schema(example = "web_link", description = "`web_link`")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public WebLinkBase etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * The entity tag of this web link. Used with &#x60;If-Match&#x60; headers.
   * @return etag
  **/
  @Schema(example = "1", description = "The entity tag of this web link. Used with `If-Match` headers.")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebLinkBase webLinkBase = (WebLinkBase) o;
    return Objects.equals(this.id, webLinkBase.id) &&
        Objects.equals(this.type, webLinkBase.type) &&
        Objects.equals(this.etag, webLinkBase.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, etag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebLinkBase {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
