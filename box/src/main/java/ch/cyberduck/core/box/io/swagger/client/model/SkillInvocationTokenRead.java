/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.FileScope;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * The basics of an access token
 */
@Schema(description = "The basics of an access token")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class SkillInvocationTokenRead {
  @JsonProperty("access_token")
  private String accessToken = null;

  @JsonProperty("expires_in")
  private Long expiresIn = null;

  /**
   * The type of access token returned.
   */
  public enum TokenTypeEnum {
    BEARER("bearer");

    private String value;

    TokenTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TokenTypeEnum fromValue(String text) {
      for (TokenTypeEnum b : TokenTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("token_type")
  private TokenTypeEnum tokenType = null;

  @JsonProperty("restricted_to")
  private List<FileScope> restrictedTo = null;

  public SkillInvocationTokenRead accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * The requested access token.
   * @return accessToken
  **/
  @Schema(example = "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ", description = "The requested access token.")
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  public SkillInvocationTokenRead expiresIn(Long expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

   /**
   * The time in seconds in seconds by which this token will expire.
   * @return expiresIn
  **/
  @Schema(example = "3600", description = "The time in seconds in seconds by which this token will expire.")
  public Long getExpiresIn() {
    return expiresIn;
  }

  public void setExpiresIn(Long expiresIn) {
    this.expiresIn = expiresIn;
  }

  public SkillInvocationTokenRead tokenType(TokenTypeEnum tokenType) {
    this.tokenType = tokenType;
    return this;
  }

   /**
   * The type of access token returned.
   * @return tokenType
  **/
  @Schema(example = "bearer", description = "The type of access token returned.")
  public TokenTypeEnum getTokenType() {
    return tokenType;
  }

  public void setTokenType(TokenTypeEnum tokenType) {
    this.tokenType = tokenType;
  }

  public SkillInvocationTokenRead restrictedTo(List<FileScope> restrictedTo) {
    this.restrictedTo = restrictedTo;
    return this;
  }

  public SkillInvocationTokenRead addRestrictedToItem(FileScope restrictedToItem) {
    if (this.restrictedTo == null) {
      this.restrictedTo = new ArrayList<>();
    }
    this.restrictedTo.add(restrictedToItem);
    return this;
  }

   /**
   * The permissions that this access token permits, providing a list of resources (files, folders, etc) and the scopes permitted for each of those resources.
   * @return restrictedTo
  **/
  @Schema(description = "The permissions that this access token permits, providing a list of resources (files, folders, etc) and the scopes permitted for each of those resources.")
  public List<FileScope> getRestrictedTo() {
    return restrictedTo;
  }

  public void setRestrictedTo(List<FileScope> restrictedTo) {
    this.restrictedTo = restrictedTo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SkillInvocationTokenRead skillInvocationTokenRead = (SkillInvocationTokenRead) o;
    return Objects.equals(this.accessToken, skillInvocationTokenRead.accessToken) &&
        Objects.equals(this.expiresIn, skillInvocationTokenRead.expiresIn) &&
        Objects.equals(this.tokenType, skillInvocationTokenRead.tokenType) &&
        Objects.equals(this.restrictedTo, skillInvocationTokenRead.restrictedTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessToken, expiresIn, tokenType, restrictedTo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SkillInvocationTokenRead {\n");
    
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("    restrictedTo: ").append(toIndentedString(restrictedTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
