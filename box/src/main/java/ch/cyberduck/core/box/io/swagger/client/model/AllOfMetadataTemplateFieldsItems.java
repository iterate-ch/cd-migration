/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options.
 */
@Schema(description = "A field within a metadata template. Fields can be a basic text, date, or number field, or a list of options.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class AllOfMetadataTemplateFieldsItems {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("options")
  private List<Object> options = null;

  public AllOfMetadataTemplateFieldsItems id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique ID of the metadata template field.
   * @return id
  **/
  @Schema(example = "822227e0-47a5-921b-88a8-494760b2e6d2", description = "The unique ID of the metadata template field.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AllOfMetadataTemplateFieldsItems options(List<Object> options) {
    this.options = options;
    return this;
  }

  public AllOfMetadataTemplateFieldsItems addOptionsItem(Object optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * A list of options for this field. This is used in combination with the &#x60;enum&#x60; and &#x60;multiSelect&#x60; field types.
   * @return options
  **/
  @Schema(description = "A list of options for this field. This is used in combination with the `enum` and `multiSelect` field types.")
  public List<Object> getOptions() {
    return options;
  }

  public void setOptions(List<Object> options) {
    this.options = options;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllOfMetadataTemplateFieldsItems allOfMetadataTemplateFieldsItems = (AllOfMetadataTemplateFieldsItems) o;
    return Objects.equals(this.id, allOfMetadataTemplateFieldsItems.id) &&
        Objects.equals(this.options, allOfMetadataTemplateFieldsItems.options);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, options);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllOfMetadataTemplateFieldsItems {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
