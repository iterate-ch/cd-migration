/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * Body55
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class Body55 {
  /**
   * The role of the user in the group.
   */
  public enum RoleEnum {
    MEMBER("member"),
    ADMIN("admin");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static RoleEnum fromValue(String text) {
      for (RoleEnum b : RoleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("role")
  private RoleEnum role = null;

  @JsonProperty("configurable_permissions")
  private Map<String, Boolean> configurablePermissions = null;

  public Body55 role(RoleEnum role) {
    this.role = role;
    return this;
  }

   /**
   * The role of the user in the group.
   * @return role
  **/
  @Schema(example = "member", description = "The role of the user in the group.")
  public RoleEnum getRole() {
    return role;
  }

  public void setRole(RoleEnum role) {
    this.role = role;
  }

  public Body55 configurablePermissions(Map<String, Boolean> configurablePermissions) {
    this.configurablePermissions = configurablePermissions;
    return this;
  }

  public Body55 putConfigurablePermissionsItem(String key, Boolean configurablePermissionsItem) {
    if (this.configurablePermissions == null) {
      this.configurablePermissions = new HashMap<>();
    }
    this.configurablePermissions.put(key, configurablePermissionsItem);
    return this;
  }

   /**
   * Custom configuration for the permissions an admin if a group will receive. This option has no effect on members with a role of &#x60;member&#x60;.  Setting these permissions overwrites the default access levels of an admin.  Specifying a value of \&quot;null\&quot; for this object will disable all configurable permissions. Specifying permissions will set them accordingly, omitted permissions will be enabled by default.
   * @return configurablePermissions
  **/
  @Schema(example = "{\"can_run_reports\":true}", description = "Custom configuration for the permissions an admin if a group will receive. This option has no effect on members with a role of `member`.  Setting these permissions overwrites the default access levels of an admin.  Specifying a value of \"null\" for this object will disable all configurable permissions. Specifying permissions will set them accordingly, omitted permissions will be enabled by default.")
  public Map<String, Boolean> getConfigurablePermissions() {
    return configurablePermissions;
  }

  public void setConfigurablePermissions(Map<String, Boolean> configurablePermissions) {
    this.configurablePermissions = configurablePermissions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body55 body55 = (Body55) o;
    return Objects.equals(this.role, body55.role) &&
        Objects.equals(this.configurablePermissions, body55.configurablePermissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(role, configurablePermissions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body55 {\n");
    
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    configurablePermissions: ").append(toIndentedString(configurablePermissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
