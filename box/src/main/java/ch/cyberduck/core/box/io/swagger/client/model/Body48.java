/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.UsersuserIdNotificationEmail;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Body48
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class Body48 {
  @JsonProperty("enterprise")
  private String enterprise = null;

  @JsonProperty("notify")
  private Boolean notify = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("login")
  private String login = null;

  /**
   * The user’s enterprise role
   */
  public enum RoleEnum {
    COADMIN("coadmin"),
    USER("user");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static RoleEnum fromValue(String text) {
      for (RoleEnum b : RoleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("role")
  private RoleEnum role = null;

  @JsonProperty("language")
  private String language = null;

  @JsonProperty("is_sync_enabled")
  private Boolean isSyncEnabled = null;

  @JsonProperty("job_title")
  private String jobTitle = null;

  @JsonProperty("phone")
  private String phone = null;

  @JsonProperty("address")
  private String address = null;

  @JsonProperty("tracking_codes")
  private List<String> trackingCodes = null;

  @JsonProperty("can_see_managed_users")
  private Boolean canSeeManagedUsers = null;

  @JsonProperty("timezone")
  private String timezone = null;

  @JsonProperty("is_external_collab_restricted")
  private Boolean isExternalCollabRestricted = null;

  @JsonProperty("is_exempt_from_device_limits")
  private Boolean isExemptFromDeviceLimits = null;

  @JsonProperty("is_exempt_from_login_verification")
  private Boolean isExemptFromLoginVerification = null;

  @JsonProperty("is_password_reset_required")
  private Boolean isPasswordResetRequired = null;

  /**
   * The user&#x27;s account status
   */
  public enum StatusEnum {
    ACTIVE("active"),
    INACTIVE("inactive"),
    CANNOT_DELETE_EDIT("cannot_delete_edit"),
    CANNOT_DELETE_EDIT_UPLOAD("cannot_delete_edit_upload");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("space_amount")
  private Long spaceAmount = null;

  @JsonProperty("notification_email")
  private UsersuserIdNotificationEmail notificationEmail = null;

  public Body48 enterprise(String enterprise) {
    this.enterprise = enterprise;
    return this;
  }

   /**
   * Set this to &#x60;null&#x60; to roll the user out of the enterprise and make them a free user
   * @return enterprise
  **/
  @Schema(description = "Set this to `null` to roll the user out of the enterprise and make them a free user")
  public String getEnterprise() {
    return enterprise;
  }

  public void setEnterprise(String enterprise) {
    this.enterprise = enterprise;
  }

  public Body48 notify(Boolean notify) {
    this.notify = notify;
    return this;
  }

   /**
   * Whether the user should receive an email when they are rolled out of an enterprise
   * @return notify
  **/
  @Schema(example = "true", description = "Whether the user should receive an email when they are rolled out of an enterprise")
  public Boolean isNotify() {
    return notify;
  }

  public void setNotify(Boolean notify) {
    this.notify = notify;
  }

  public Body48 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the user
   * @return name
  **/
  @Schema(example = "Aaron Levie", description = "The name of the user")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Body48 login(String login) {
    this.login = login;
    return this;
  }

   /**
   * The email address the user uses to log in
   * @return login
  **/
  @Schema(example = "boss@box.com", description = "The email address the user uses to log in")
  public String getLogin() {
    return login;
  }

  public void setLogin(String login) {
    this.login = login;
  }

  public Body48 role(RoleEnum role) {
    this.role = role;
    return this;
  }

   /**
   * The user’s enterprise role
   * @return role
  **/
  @Schema(example = "user", description = "The user’s enterprise role")
  public RoleEnum getRole() {
    return role;
  }

  public void setRole(RoleEnum role) {
    this.role = role;
  }

  public Body48 language(String language) {
    this.language = language;
    return this;
  }

   /**
   * The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format.
   * @return language
  **/
  @Schema(example = "en", description = "The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format.")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public Body48 isSyncEnabled(Boolean isSyncEnabled) {
    this.isSyncEnabled = isSyncEnabled;
    return this;
  }

   /**
   * Whether the user can use Box Sync
   * @return isSyncEnabled
  **/
  @Schema(example = "true", description = "Whether the user can use Box Sync")
  public Boolean isIsSyncEnabled() {
    return isSyncEnabled;
  }

  public void setIsSyncEnabled(Boolean isSyncEnabled) {
    this.isSyncEnabled = isSyncEnabled;
  }

  public Body48 jobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * The user’s job title
   * @return jobTitle
  **/
  @Schema(example = "CEO", description = "The user’s job title")
  public String getJobTitle() {
    return jobTitle;
  }

  public void setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
  }

  public Body48 phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * The user’s phone number
   * @return phone
  **/
  @Schema(example = "6509241374", description = "The user’s phone number")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public Body48 address(String address) {
    this.address = address;
    return this;
  }

   /**
   * The user’s address
   * @return address
  **/
  @Schema(example = "900 Jefferson Ave, Redwood City, CA 94063", description = "The user’s address")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public Body48 trackingCodes(List<String> trackingCodes) {
    this.trackingCodes = trackingCodes;
    return this;
  }

  public Body48 addTrackingCodesItem(String trackingCodesItem) {
    if (this.trackingCodes == null) {
      this.trackingCodes = new ArrayList<>();
    }
    this.trackingCodes.add(trackingCodesItem);
    return this;
  }

   /**
   * Tracking codes allow an admin to generate reports from the admin console and assign an attribute to a specific group of users. This setting must be enabled for an enterprise before it can be used.
   * @return trackingCodes
  **/
  @Schema(example = "[\"code1: 12345\"]", description = "Tracking codes allow an admin to generate reports from the admin console and assign an attribute to a specific group of users. This setting must be enabled for an enterprise before it can be used.")
  public List<String> getTrackingCodes() {
    return trackingCodes;
  }

  public void setTrackingCodes(List<String> trackingCodes) {
    this.trackingCodes = trackingCodes;
  }

  public Body48 canSeeManagedUsers(Boolean canSeeManagedUsers) {
    this.canSeeManagedUsers = canSeeManagedUsers;
    return this;
  }

   /**
   * Whether the user can see other enterprise users in their contact list
   * @return canSeeManagedUsers
  **/
  @Schema(example = "true", description = "Whether the user can see other enterprise users in their contact list")
  public Boolean isCanSeeManagedUsers() {
    return canSeeManagedUsers;
  }

  public void setCanSeeManagedUsers(Boolean canSeeManagedUsers) {
    this.canSeeManagedUsers = canSeeManagedUsers;
  }

  public Body48 timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * The user&#x27;s timezone
   * @return timezone
  **/
  @Schema(example = "Africa/Bujumbura", description = "The user's timezone")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public Body48 isExternalCollabRestricted(Boolean isExternalCollabRestricted) {
    this.isExternalCollabRestricted = isExternalCollabRestricted;
    return this;
  }

   /**
   * Whether the user is allowed to collaborate with users outside their enterprise
   * @return isExternalCollabRestricted
  **/
  @Schema(example = "true", description = "Whether the user is allowed to collaborate with users outside their enterprise")
  public Boolean isIsExternalCollabRestricted() {
    return isExternalCollabRestricted;
  }

  public void setIsExternalCollabRestricted(Boolean isExternalCollabRestricted) {
    this.isExternalCollabRestricted = isExternalCollabRestricted;
  }

  public Body48 isExemptFromDeviceLimits(Boolean isExemptFromDeviceLimits) {
    this.isExemptFromDeviceLimits = isExemptFromDeviceLimits;
    return this;
  }

   /**
   * Whether to exempt the user from enterprise device limits
   * @return isExemptFromDeviceLimits
  **/
  @Schema(example = "true", description = "Whether to exempt the user from enterprise device limits")
  public Boolean isIsExemptFromDeviceLimits() {
    return isExemptFromDeviceLimits;
  }

  public void setIsExemptFromDeviceLimits(Boolean isExemptFromDeviceLimits) {
    this.isExemptFromDeviceLimits = isExemptFromDeviceLimits;
  }

  public Body48 isExemptFromLoginVerification(Boolean isExemptFromLoginVerification) {
    this.isExemptFromLoginVerification = isExemptFromLoginVerification;
    return this;
  }

   /**
   * Whether the user must use two-factor authentication
   * @return isExemptFromLoginVerification
  **/
  @Schema(example = "true", description = "Whether the user must use two-factor authentication")
  public Boolean isIsExemptFromLoginVerification() {
    return isExemptFromLoginVerification;
  }

  public void setIsExemptFromLoginVerification(Boolean isExemptFromLoginVerification) {
    this.isExemptFromLoginVerification = isExemptFromLoginVerification;
  }

  public Body48 isPasswordResetRequired(Boolean isPasswordResetRequired) {
    this.isPasswordResetRequired = isPasswordResetRequired;
    return this;
  }

   /**
   * Whether the user is required to reset their password
   * @return isPasswordResetRequired
  **/
  @Schema(example = "true", description = "Whether the user is required to reset their password")
  public Boolean isIsPasswordResetRequired() {
    return isPasswordResetRequired;
  }

  public void setIsPasswordResetRequired(Boolean isPasswordResetRequired) {
    this.isPasswordResetRequired = isPasswordResetRequired;
  }

  public Body48 status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The user&#x27;s account status
   * @return status
  **/
  @Schema(example = "active", description = "The user's account status")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Body48 spaceAmount(Long spaceAmount) {
    this.spaceAmount = spaceAmount;
    return this;
  }

   /**
   * The user’s total available space in bytes. Set this to &#x60;-1&#x60; to indicate unlimited storage.
   * @return spaceAmount
  **/
  @Schema(example = "11345156112", description = "The user’s total available space in bytes. Set this to `-1` to indicate unlimited storage.")
  public Long getSpaceAmount() {
    return spaceAmount;
  }

  public void setSpaceAmount(Long spaceAmount) {
    this.spaceAmount = spaceAmount;
  }

  public Body48 notificationEmail(UsersuserIdNotificationEmail notificationEmail) {
    this.notificationEmail = notificationEmail;
    return this;
  }

   /**
   * Get notificationEmail
   * @return notificationEmail
  **/
  @Schema(description = "")
  public UsersuserIdNotificationEmail getNotificationEmail() {
    return notificationEmail;
  }

  public void setNotificationEmail(UsersuserIdNotificationEmail notificationEmail) {
    this.notificationEmail = notificationEmail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body48 body48 = (Body48) o;
    return Objects.equals(this.enterprise, body48.enterprise) &&
        Objects.equals(this.notify, body48.notify) &&
        Objects.equals(this.name, body48.name) &&
        Objects.equals(this.login, body48.login) &&
        Objects.equals(this.role, body48.role) &&
        Objects.equals(this.language, body48.language) &&
        Objects.equals(this.isSyncEnabled, body48.isSyncEnabled) &&
        Objects.equals(this.jobTitle, body48.jobTitle) &&
        Objects.equals(this.phone, body48.phone) &&
        Objects.equals(this.address, body48.address) &&
        Objects.equals(this.trackingCodes, body48.trackingCodes) &&
        Objects.equals(this.canSeeManagedUsers, body48.canSeeManagedUsers) &&
        Objects.equals(this.timezone, body48.timezone) &&
        Objects.equals(this.isExternalCollabRestricted, body48.isExternalCollabRestricted) &&
        Objects.equals(this.isExemptFromDeviceLimits, body48.isExemptFromDeviceLimits) &&
        Objects.equals(this.isExemptFromLoginVerification, body48.isExemptFromLoginVerification) &&
        Objects.equals(this.isPasswordResetRequired, body48.isPasswordResetRequired) &&
        Objects.equals(this.status, body48.status) &&
        Objects.equals(this.spaceAmount, body48.spaceAmount) &&
        Objects.equals(this.notificationEmail, body48.notificationEmail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enterprise, notify, name, login, role, language, isSyncEnabled, jobTitle, phone, address, trackingCodes, canSeeManagedUsers, timezone, isExternalCollabRestricted, isExemptFromDeviceLimits, isExemptFromLoginVerification, isPasswordResetRequired, status, spaceAmount, notificationEmail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body48 {\n");
    
    sb.append("    enterprise: ").append(toIndentedString(enterprise)).append("\n");
    sb.append("    notify: ").append(toIndentedString(notify)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    isSyncEnabled: ").append(toIndentedString(isSyncEnabled)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    trackingCodes: ").append(toIndentedString(trackingCodes)).append("\n");
    sb.append("    canSeeManagedUsers: ").append(toIndentedString(canSeeManagedUsers)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    isExternalCollabRestricted: ").append(toIndentedString(isExternalCollabRestricted)).append("\n");
    sb.append("    isExemptFromDeviceLimits: ").append(toIndentedString(isExemptFromDeviceLimits)).append("\n");
    sb.append("    isExemptFromLoginVerification: ").append(toIndentedString(isExemptFromLoginVerification)).append("\n");
    sb.append("    isPasswordResetRequired: ").append(toIndentedString(isPasswordResetRequired)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    spaceAmount: ").append(toIndentedString(spaceAmount)).append("\n");
    sb.append("    notificationEmail: ").append(toIndentedString(notificationEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
