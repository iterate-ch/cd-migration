/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * An email alias for a user.
 */
@Schema(description = "An email alias for a user.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class EmailAlias {
  @JsonProperty("id")
  private String id = null;

  /**
   * &#x60;email_alias&#x60;
   */
  public enum TypeEnum {
    ALIAS("email_alias");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("is_confirmed")
  private Boolean isConfirmed = null;

  public EmailAlias id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier for this object
   * @return id
  **/
  @Schema(example = "11446498", description = "The unique identifier for this object")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EmailAlias type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * &#x60;email_alias&#x60;
   * @return type
  **/
  @Schema(example = "email_alias", description = "`email_alias`")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public EmailAlias email(String email) {
    this.email = email;
    return this;
  }

   /**
   * The email address
   * @return email
  **/
  @Schema(example = "alias@example.com", description = "The email address")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public EmailAlias isConfirmed(Boolean isConfirmed) {
    this.isConfirmed = isConfirmed;
    return this;
  }

   /**
   * Whether the email address has been confirmed
   * @return isConfirmed
  **/
  @Schema(example = "true", description = "Whether the email address has been confirmed")
  public Boolean isIsConfirmed() {
    return isConfirmed;
  }

  public void setIsConfirmed(Boolean isConfirmed) {
    this.isConfirmed = isConfirmed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailAlias emailAlias = (EmailAlias) o;
    return Objects.equals(this.id, emailAlias.id) &&
        Objects.equals(this.type, emailAlias.type) &&
        Objects.equals(this.email, emailAlias.email) &&
        Objects.equals(this.isConfirmed, emailAlias.isConfirmed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, email, isConfirmed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailAlias {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    isConfirmed: ").append(toIndentedString(isConfirmed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
