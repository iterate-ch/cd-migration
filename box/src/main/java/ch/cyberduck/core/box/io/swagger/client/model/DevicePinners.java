/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.DevicePinner;
import ch.cyberduck.core.box.io.swagger.client.model.DevicePinnersOrder;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * A list of device pins
 */
@Schema(description = "A list of device pins")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class DevicePinners {
  @JsonProperty("entries")
  private List<DevicePinner> entries = null;

  @JsonProperty("limit")
  private Long limit = 100l;

  @JsonProperty("next_marker")
  private Long nextMarker = null;

  @JsonProperty("order")
  private List<DevicePinnersOrder> order = null;

  public DevicePinners entries(List<DevicePinner> entries) {
    this.entries = entries;
    return this;
  }

  public DevicePinners addEntriesItem(DevicePinner entriesItem) {
    if (this.entries == null) {
      this.entries = new ArrayList<>();
    }
    this.entries.add(entriesItem);
    return this;
  }

   /**
   * Get entries
   * @return entries
  **/
  @Schema(description = "")
  public List<DevicePinner> getEntries() {
    return entries;
  }

  public void setEntries(List<DevicePinner> entries) {
    this.entries = entries;
  }

  public DevicePinners limit(Long limit) {
    this.limit = limit;
    return this;
  }

   /**
   * The limit that was used for these entries. This will be the same as the &#x60;limit&#x60; query parameter unless that value exceeded the maximum value allowed.
   * @return limit
  **/
  @Schema(example = "200", description = "The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed.")
  public Long getLimit() {
    return limit;
  }

  public void setLimit(Long limit) {
    this.limit = limit;
  }

  public DevicePinners nextMarker(Long nextMarker) {
    this.nextMarker = nextMarker;
    return this;
  }

   /**
   * The marker for the start of the next page of results.
   * @return nextMarker
  **/
  @Schema(example = "3000", description = "The marker for the start of the next page of results.")
  public Long getNextMarker() {
    return nextMarker;
  }

  public void setNextMarker(Long nextMarker) {
    this.nextMarker = nextMarker;
  }

  public DevicePinners order(List<DevicePinnersOrder> order) {
    this.order = order;
    return this;
  }

  public DevicePinners addOrderItem(DevicePinnersOrder orderItem) {
    if (this.order == null) {
      this.order = new ArrayList<>();
    }
    this.order.add(orderItem);
    return this;
  }

   /**
   * The order by which items are returned.
   * @return order
  **/
  @Schema(description = "The order by which items are returned.")
  public List<DevicePinnersOrder> getOrder() {
    return order;
  }

  public void setOrder(List<DevicePinnersOrder> order) {
    this.order = order;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DevicePinners devicePinners = (DevicePinners) o;
    return Objects.equals(this.entries, devicePinners.entries) &&
        Objects.equals(this.limit, devicePinners.limit) &&
        Objects.equals(this.nextMarker, devicePinners.nextMarker) &&
        Objects.equals(this.order, devicePinners.order);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entries, limit, nextMarker, order);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DevicePinners {\n");
    
    sb.append("    entries: ").append(toIndentedString(entries)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    nextMarker: ").append(toIndentedString(nextMarker)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
