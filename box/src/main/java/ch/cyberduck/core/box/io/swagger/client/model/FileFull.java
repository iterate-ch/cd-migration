/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.File;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
/**
 * A full representation of a file, as can be returned from any file API endpoints by default
 */
@Schema(description = "A full representation of a file, as can be returned from any file API endpoints by default")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class FileFull extends File {
  @JsonProperty("version_number")
  private String versionNumber = null;

  @JsonProperty("comment_count")
  private Integer commentCount = null;

  @JsonProperty("permissions")
  private Object permissions = null;

  @JsonProperty("tags")
  private Object tags = null;

  @JsonProperty("lock")
  private Object lock = null;

  @JsonProperty("extension")
  private String extension = null;

  @JsonProperty("is_package")
  private Boolean isPackage = null;

  @JsonProperty("expiring_embed_link")
  private Object expiringEmbedLink = null;

  @JsonProperty("watermark_info")
  private Object watermarkInfo = null;

  /**
   * Gets or Sets allowedInviteeRoles
   */
  public enum AllowedInviteeRolesEnum {
    EDITOR("editor"),
    VIEWER("viewer"),
    PREVIEWER("previewer"),
    UPLOADER("uploader"),
    PREVIEWER_UPLOADER("previewer uploader"),
    VIEWER_UPLOADER("viewer uploader"),
    CO_OWNER("co-owner");

    private String value;

    AllowedInviteeRolesEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static AllowedInviteeRolesEnum fromValue(String text) {
      for (AllowedInviteeRolesEnum b : AllowedInviteeRolesEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("allowed_invitee_roles")
  private List<AllowedInviteeRolesEnum> allowedInviteeRoles = null;

  @JsonProperty("is_externally_owned")
  private Boolean isExternallyOwned = null;

  @JsonProperty("has_collaborations")
  private Boolean hasCollaborations = null;

  @JsonProperty("metadata")
  private Object metadata = null;

  @JsonProperty("expires_at")
  private DateTime expiresAt = null;

  @JsonProperty("representations")
  private Object representations = null;

  @JsonProperty("classification")
  private Object classification = null;

  @JsonProperty("uploader_display_name")
  private Object uploaderDisplayName = null;

  public FileFull versionNumber(String versionNumber) {
    this.versionNumber = versionNumber;
    return this;
  }

   /**
   * The version number of this file
   * @return versionNumber
  **/
  @Schema(example = "1", description = "The version number of this file")
  public String getVersionNumber() {
    return versionNumber;
  }

  public void setVersionNumber(String versionNumber) {
    this.versionNumber = versionNumber;
  }

  public FileFull commentCount(Integer commentCount) {
    this.commentCount = commentCount;
    return this;
  }

   /**
   * The number of comments on this file
   * @return commentCount
  **/
  @Schema(example = "10", description = "The number of comments on this file")
  public Integer getCommentCount() {
    return commentCount;
  }

  public void setCommentCount(Integer commentCount) {
    this.commentCount = commentCount;
  }

  public FileFull permissions(Object permissions) {
    this.permissions = permissions;
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @Schema(description = "")
  public Object getPermissions() {
    return permissions;
  }

  public void setPermissions(Object permissions) {
    this.permissions = permissions;
  }

  public FileFull tags(Object tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public Object getTags() {
    return tags;
  }

  public void setTags(Object tags) {
    this.tags = tags;
  }

  public FileFull lock(Object lock) {
    this.lock = lock;
    return this;
  }

   /**
   * Get lock
   * @return lock
  **/
  @Schema(description = "")
  public Object getLock() {
    return lock;
  }

  public void setLock(Object lock) {
    this.lock = lock;
  }

  public FileFull extension(String extension) {
    this.extension = extension;
    return this;
  }

   /**
   * Indicates the (optional) file extension for this file. By default, this is set to an empty string.
   * @return extension
  **/
  @Schema(example = "pdf", description = "Indicates the (optional) file extension for this file. By default, this is set to an empty string.")
  public String getExtension() {
    return extension;
  }

  public void setExtension(String extension) {
    this.extension = extension;
  }

  public FileFull isPackage(Boolean isPackage) {
    this.isPackage = isPackage;
    return this;
  }

   /**
   * Indicates if the file is a package. Packages are commonly used by Mac Applications and can include iWork files.
   * @return isPackage
  **/
  @Schema(example = "true", description = "Indicates if the file is a package. Packages are commonly used by Mac Applications and can include iWork files.")
  public Boolean isIsPackage() {
    return isPackage;
  }

  public void setIsPackage(Boolean isPackage) {
    this.isPackage = isPackage;
  }

  public FileFull expiringEmbedLink(Object expiringEmbedLink) {
    this.expiringEmbedLink = expiringEmbedLink;
    return this;
  }

   /**
   * Get expiringEmbedLink
   * @return expiringEmbedLink
  **/
  @Schema(description = "")
  public Object getExpiringEmbedLink() {
    return expiringEmbedLink;
  }

  public void setExpiringEmbedLink(Object expiringEmbedLink) {
    this.expiringEmbedLink = expiringEmbedLink;
  }

  public FileFull watermarkInfo(Object watermarkInfo) {
    this.watermarkInfo = watermarkInfo;
    return this;
  }

   /**
   * Get watermarkInfo
   * @return watermarkInfo
  **/
  @Schema(description = "")
  public Object getWatermarkInfo() {
    return watermarkInfo;
  }

  public void setWatermarkInfo(Object watermarkInfo) {
    this.watermarkInfo = watermarkInfo;
  }

  public FileFull allowedInviteeRoles(List<AllowedInviteeRolesEnum> allowedInviteeRoles) {
    this.allowedInviteeRoles = allowedInviteeRoles;
    return this;
  }

  public FileFull addAllowedInviteeRolesItem(AllowedInviteeRolesEnum allowedInviteeRolesItem) {
    if (this.allowedInviteeRoles == null) {
      this.allowedInviteeRoles = new ArrayList<>();
    }
    this.allowedInviteeRoles.add(allowedInviteeRolesItem);
    return this;
  }

   /**
   * A list of the types of roles that user can be invited at when sharing this file.
   * @return allowedInviteeRoles
  **/
  @Schema(example = "[\"editor\"]", description = "A list of the types of roles that user can be invited at when sharing this file.")
  public List<AllowedInviteeRolesEnum> getAllowedInviteeRoles() {
    return allowedInviteeRoles;
  }

  public void setAllowedInviteeRoles(List<AllowedInviteeRolesEnum> allowedInviteeRoles) {
    this.allowedInviteeRoles = allowedInviteeRoles;
  }

  public FileFull isExternallyOwned(Boolean isExternallyOwned) {
    this.isExternallyOwned = isExternallyOwned;
    return this;
  }

   /**
   * Specifies if this file is owned by a user outside of the authenticated enterprise.
   * @return isExternallyOwned
  **/
  @Schema(example = "true", description = "Specifies if this file is owned by a user outside of the authenticated enterprise.")
  public Boolean isIsExternallyOwned() {
    return isExternallyOwned;
  }

  public void setIsExternallyOwned(Boolean isExternallyOwned) {
    this.isExternallyOwned = isExternallyOwned;
  }

  public FileFull hasCollaborations(Boolean hasCollaborations) {
    this.hasCollaborations = hasCollaborations;
    return this;
  }

   /**
   * Specifies if this file has any other collaborators.
   * @return hasCollaborations
  **/
  @Schema(example = "true", description = "Specifies if this file has any other collaborators.")
  public Boolean isHasCollaborations() {
    return hasCollaborations;
  }

  public void setHasCollaborations(Boolean hasCollaborations) {
    this.hasCollaborations = hasCollaborations;
  }

  public FileFull metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @Schema(description = "")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }

  public FileFull expiresAt(DateTime expiresAt) {
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * When the file will automatically be deleted
   * @return expiresAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the file will automatically be deleted")
  public DateTime getExpiresAt() {
    return expiresAt;
  }

  public void setExpiresAt(DateTime expiresAt) {
    this.expiresAt = expiresAt;
  }

  public FileFull representations(Object representations) {
    this.representations = representations;
    return this;
  }

   /**
   * Get representations
   * @return representations
  **/
  @Schema(description = "")
  public Object getRepresentations() {
    return representations;
  }

  public void setRepresentations(Object representations) {
    this.representations = representations;
  }

  public FileFull classification(Object classification) {
    this.classification = classification;
    return this;
  }

   /**
   * Get classification
   * @return classification
  **/
  @Schema(description = "")
  public Object getClassification() {
    return classification;
  }

  public void setClassification(Object classification) {
    this.classification = classification;
  }

  public FileFull uploaderDisplayName(Object uploaderDisplayName) {
    this.uploaderDisplayName = uploaderDisplayName;
    return this;
  }

   /**
   * Get uploaderDisplayName
   * @return uploaderDisplayName
  **/
  @Schema(description = "")
  public Object getUploaderDisplayName() {
    return uploaderDisplayName;
  }

  public void setUploaderDisplayName(Object uploaderDisplayName) {
    this.uploaderDisplayName = uploaderDisplayName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileFull fileFull = (FileFull) o;
    return Objects.equals(this.versionNumber, fileFull.versionNumber) &&
        Objects.equals(this.commentCount, fileFull.commentCount) &&
        Objects.equals(this.permissions, fileFull.permissions) &&
        Objects.equals(this.tags, fileFull.tags) &&
        Objects.equals(this.lock, fileFull.lock) &&
        Objects.equals(this.extension, fileFull.extension) &&
        Objects.equals(this.isPackage, fileFull.isPackage) &&
        Objects.equals(this.expiringEmbedLink, fileFull.expiringEmbedLink) &&
        Objects.equals(this.watermarkInfo, fileFull.watermarkInfo) &&
        Objects.equals(this.allowedInviteeRoles, fileFull.allowedInviteeRoles) &&
        Objects.equals(this.isExternallyOwned, fileFull.isExternallyOwned) &&
        Objects.equals(this.hasCollaborations, fileFull.hasCollaborations) &&
        Objects.equals(this.metadata, fileFull.metadata) &&
        Objects.equals(this.expiresAt, fileFull.expiresAt) &&
        Objects.equals(this.representations, fileFull.representations) &&
        Objects.equals(this.classification, fileFull.classification) &&
        Objects.equals(this.uploaderDisplayName, fileFull.uploaderDisplayName) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionNumber, commentCount, permissions, tags, lock, extension, isPackage, expiringEmbedLink, watermarkInfo, allowedInviteeRoles, isExternallyOwned, hasCollaborations, metadata, expiresAt, representations, classification, uploaderDisplayName, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileFull {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    commentCount: ").append(toIndentedString(commentCount)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    lock: ").append(toIndentedString(lock)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    isPackage: ").append(toIndentedString(isPackage)).append("\n");
    sb.append("    expiringEmbedLink: ").append(toIndentedString(expiringEmbedLink)).append("\n");
    sb.append("    watermarkInfo: ").append(toIndentedString(watermarkInfo)).append("\n");
    sb.append("    allowedInviteeRoles: ").append(toIndentedString(allowedInviteeRoles)).append("\n");
    sb.append("    isExternallyOwned: ").append(toIndentedString(isExternallyOwned)).append("\n");
    sb.append("    hasCollaborations: ").append(toIndentedString(hasCollaborations)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    representations: ").append(toIndentedString(representations)).append("\n");
    sb.append("    classification: ").append(toIndentedString(classification)).append("\n");
    sb.append("    uploaderDisplayName: ").append(toIndentedString(uploaderDisplayName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
