/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.SkillCardInvocation;
import ch.cyberduck.core.box.io.swagger.client.model.SkillCardSkill;
import ch.cyberduck.core.box.io.swagger.client.model.TimelineSkillCardEntries;
import ch.cyberduck.core.box.io.swagger.client.model.TimelineSkillCardSkillCardTitle;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
/**
 * A Box Skill metadata card that places a list of images on a timeline.
 */
@Schema(description = "A Box Skill metadata card that places a list of images on a timeline.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class TimelineSkillCard implements OneOfbody13CardsItems, OneOfSkillCardsMetadataCardsItems, OneOfskillInvocationsskillIdMetadataCardsItems {
  @JsonProperty("created_at")
  private DateTime createdAt = null;

  /**
   * &#x60;skill_card&#x60;
   */
  public enum TypeEnum {
    CARD("skill_card");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  /**
   * &#x60;timeline&#x60;
   */
  public enum SkillCardTypeEnum {
    TIMELINE("timeline");

    private String value;

    SkillCardTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static SkillCardTypeEnum fromValue(String text) {
      for (SkillCardTypeEnum b : SkillCardTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("skill_card_type")
  private SkillCardTypeEnum skillCardType = null;

  @JsonProperty("skill_card_title")
  private TimelineSkillCardSkillCardTitle skillCardTitle = null;

  @JsonProperty("skill")
  private SkillCardSkill skill = null;

  @JsonProperty("invocation")
  private SkillCardInvocation invocation = null;

  @JsonProperty("duration")
  private Integer duration = null;

  @JsonProperty("entries")
  private List<TimelineSkillCardEntries> entries = new ArrayList<>();

  public TimelineSkillCard createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The optional date and time this card was created at.
   * @return createdAt
  **/
  @Schema(example = "2018-04-13T13:53:23-07:00", description = "The optional date and time this card was created at.")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public TimelineSkillCard type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * &#x60;skill_card&#x60;
   * @return type
  **/
  @Schema(example = "skill_card", required = true, description = "`skill_card`")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public TimelineSkillCard skillCardType(SkillCardTypeEnum skillCardType) {
    this.skillCardType = skillCardType;
    return this;
  }

   /**
   * &#x60;timeline&#x60;
   * @return skillCardType
  **/
  @Schema(example = "timeline", required = true, description = "`timeline`")
  public SkillCardTypeEnum getSkillCardType() {
    return skillCardType;
  }

  public void setSkillCardType(SkillCardTypeEnum skillCardType) {
    this.skillCardType = skillCardType;
  }

  public TimelineSkillCard skillCardTitle(TimelineSkillCardSkillCardTitle skillCardTitle) {
    this.skillCardTitle = skillCardTitle;
    return this;
  }

   /**
   * Get skillCardTitle
   * @return skillCardTitle
  **/
  @Schema(description = "")
  public TimelineSkillCardSkillCardTitle getSkillCardTitle() {
    return skillCardTitle;
  }

  public void setSkillCardTitle(TimelineSkillCardSkillCardTitle skillCardTitle) {
    this.skillCardTitle = skillCardTitle;
  }

  public TimelineSkillCard skill(SkillCardSkill skill) {
    this.skill = skill;
    return this;
  }

   /**
   * Get skill
   * @return skill
  **/
  @Schema(required = true, description = "")
  public SkillCardSkill getSkill() {
    return skill;
  }

  public void setSkill(SkillCardSkill skill) {
    this.skill = skill;
  }

  public TimelineSkillCard invocation(SkillCardInvocation invocation) {
    this.invocation = invocation;
    return this;
  }

   /**
   * Get invocation
   * @return invocation
  **/
  @Schema(required = true, description = "")
  public SkillCardInvocation getInvocation() {
    return invocation;
  }

  public void setInvocation(SkillCardInvocation invocation) {
    this.invocation = invocation;
  }

  public TimelineSkillCard duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * An total duration in seconds of the timeline.
   * @return duration
  **/
  @Schema(example = "1000", description = "An total duration in seconds of the timeline.")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public TimelineSkillCard entries(List<TimelineSkillCardEntries> entries) {
    this.entries = entries;
    return this;
  }

  public TimelineSkillCard addEntriesItem(TimelineSkillCardEntries entriesItem) {
    this.entries.add(entriesItem);
    return this;
  }

   /**
   * A list of entries on the timeline.
   * @return entries
  **/
  @Schema(required = true, description = "A list of entries on the timeline.")
  public List<TimelineSkillCardEntries> getEntries() {
    return entries;
  }

  public void setEntries(List<TimelineSkillCardEntries> entries) {
    this.entries = entries;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimelineSkillCard timelineSkillCard = (TimelineSkillCard) o;
    return Objects.equals(this.createdAt, timelineSkillCard.createdAt) &&
        Objects.equals(this.type, timelineSkillCard.type) &&
        Objects.equals(this.skillCardType, timelineSkillCard.skillCardType) &&
        Objects.equals(this.skillCardTitle, timelineSkillCard.skillCardTitle) &&
        Objects.equals(this.skill, timelineSkillCard.skill) &&
        Objects.equals(this.invocation, timelineSkillCard.invocation) &&
        Objects.equals(this.duration, timelineSkillCard.duration) &&
        Objects.equals(this.entries, timelineSkillCard.entries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, type, skillCardType, skillCardTitle, skill, invocation, duration, entries);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimelineSkillCard {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    skillCardType: ").append(toIndentedString(skillCardType)).append("\n");
    sb.append("    skillCardTitle: ").append(toIndentedString(skillCardTitle)).append("\n");
    sb.append("    skill: ").append(toIndentedString(skill)).append("\n");
    sb.append("    invocation: ").append(toIndentedString(invocation)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    entries: ").append(toIndentedString(entries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
