/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.WebLinkBase;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.  Web link objects are treated similarly to file objects, they will also support most actions that apply to regular files.
 */
@Schema(description = "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.  Web link objects are treated similarly to file objects, they will also support most actions that apply to regular files.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class WebLinkMini extends WebLinkBase {
  @JsonProperty("url")
  private String url = null;

  @JsonProperty("sequence_id")
  private Object sequenceId = null;

  @JsonProperty("name")
  private String name = null;

  public WebLinkMini url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The URL this web link points to
   * @return url
  **/
  @Schema(example = "https://www.example.com/example/1234", description = "The URL this web link points to")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public WebLinkMini sequenceId(Object sequenceId) {
    this.sequenceId = sequenceId;
    return this;
  }

   /**
   * Get sequenceId
   * @return sequenceId
  **/
  @Schema(description = "")
  public Object getSequenceId() {
    return sequenceId;
  }

  public void setSequenceId(Object sequenceId) {
    this.sequenceId = sequenceId;
  }

  public WebLinkMini name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the web link
   * @return name
  **/
  @Schema(example = "My Bookmark", description = "The name of the web link")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebLinkMini webLinkMini = (WebLinkMini) o;
    return Objects.equals(this.url, webLinkMini.url) &&
        Objects.equals(this.sequenceId, webLinkMini.sequenceId) &&
        Objects.equals(this.name, webLinkMini.name) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, sequenceId, name, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebLinkMini {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    sequenceId: ").append(toIndentedString(sequenceId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
