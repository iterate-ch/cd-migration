/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * A [JSON-Patch](https://tools.ietf.org/html/rfc6902) operation for a change to make to the metadata instance.
 */
@Schema(description = "A [JSON-Patch](https://tools.ietf.org/html/rfc6902) operation for a change to make to the metadata instance.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class AMetadataTemplateUpdateOperation {
  /**
   * The type of change to perform on the template. Some of these are hazardous as they will change existing templates.
   */
  public enum OpEnum {
    EDITTEMPLATE("editTemplate"),
    ADDFIELD("addField"),
    REORDERFIELDS("reorderFields"),
    ADDENUMOPTION("addEnumOption"),
    REORDERENUMOPTIONS("reorderEnumOptions"),
    REORDERMULTISELECTOPTIONS("reorderMultiSelectOptions"),
    ADDMULTISELECTOPTION("addMultiSelectOption"),
    EDITFIELD("editField"),
    REMOVEFIELD("removeField"),
    EDITENUMOPTION("editEnumOption"),
    REMOVEENUMOPTION("removeEnumOption"),
    EDITMULTISELECTOPTION("editMultiSelectOption"),
    REMOVEMULTISELECTOPTION("removeMultiSelectOption");

    private String value;

    OpEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static OpEnum fromValue(String text) {
      for (OpEnum b : OpEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("op")
  private OpEnum op = null;

  @JsonProperty("data")
  private Map<String, String> data = null;

  @JsonProperty("fieldKey")
  private String fieldKey = null;

  @JsonProperty("fieldKeys")
  private List<String> fieldKeys = null;

  @JsonProperty("enumOptionKey")
  private String enumOptionKey = null;

  @JsonProperty("enumOptionKeys")
  private List<String> enumOptionKeys = null;

  @JsonProperty("multiSelectOptionKey")
  private String multiSelectOptionKey = null;

  @JsonProperty("multiSelectOptionKeys")
  private List<String> multiSelectOptionKeys = null;

  public AMetadataTemplateUpdateOperation op(OpEnum op) {
    this.op = op;
    return this;
  }

   /**
   * The type of change to perform on the template. Some of these are hazardous as they will change existing templates.
   * @return op
  **/
  @Schema(example = "addEnumOption", required = true, description = "The type of change to perform on the template. Some of these are hazardous as they will change existing templates.")
  public OpEnum getOp() {
    return op;
  }

  public void setOp(OpEnum op) {
    this.op = op;
  }

  public AMetadataTemplateUpdateOperation data(Map<String, String> data) {
    this.data = data;
    return this;
  }

  public AMetadataTemplateUpdateOperation putDataItem(String key, String dataItem) {
    if (this.data == null) {
      this.data = new HashMap<>();
    }
    this.data.put(key, dataItem);
    return this;
  }

   /**
   * The data for the operation. This will vary depending on the operation being performed.
   * @return data
  **/
  @Schema(example = "{\"name\":\"Aaron Levie\"}", description = "The data for the operation. This will vary depending on the operation being performed.")
  public Map<String, String> getData() {
    return data;
  }

  public void setData(Map<String, String> data) {
    this.data = data;
  }

  public AMetadataTemplateUpdateOperation fieldKey(String fieldKey) {
    this.fieldKey = fieldKey;
    return this;
  }

   /**
   * For operations that affect a single field this defines the key of the field that is affected.
   * @return fieldKey
  **/
  @Schema(example = "category", description = "For operations that affect a single field this defines the key of the field that is affected.")
  public String getFieldKey() {
    return fieldKey;
  }

  public void setFieldKey(String fieldKey) {
    this.fieldKey = fieldKey;
  }

  public AMetadataTemplateUpdateOperation fieldKeys(List<String> fieldKeys) {
    this.fieldKeys = fieldKeys;
    return this;
  }

  public AMetadataTemplateUpdateOperation addFieldKeysItem(String fieldKeysItem) {
    if (this.fieldKeys == null) {
      this.fieldKeys = new ArrayList<>();
    }
    this.fieldKeys.add(fieldKeysItem);
    return this;
  }

   /**
   * For operations that affect multiple fields this defines the keys of the fields that are affected.
   * @return fieldKeys
  **/
  @Schema(example = "[\"category\",\"name\"]", description = "For operations that affect multiple fields this defines the keys of the fields that are affected.")
  public List<String> getFieldKeys() {
    return fieldKeys;
  }

  public void setFieldKeys(List<String> fieldKeys) {
    this.fieldKeys = fieldKeys;
  }

  public AMetadataTemplateUpdateOperation enumOptionKey(String enumOptionKey) {
    this.enumOptionKey = enumOptionKey;
    return this;
  }

   /**
   * For operations that affect a single &#x60;enum&#x60; option this defines the key of the option that is affected.
   * @return enumOptionKey
  **/
  @Schema(example = "option1", description = "For operations that affect a single `enum` option this defines the key of the option that is affected.")
  public String getEnumOptionKey() {
    return enumOptionKey;
  }

  public void setEnumOptionKey(String enumOptionKey) {
    this.enumOptionKey = enumOptionKey;
  }

  public AMetadataTemplateUpdateOperation enumOptionKeys(List<String> enumOptionKeys) {
    this.enumOptionKeys = enumOptionKeys;
    return this;
  }

  public AMetadataTemplateUpdateOperation addEnumOptionKeysItem(String enumOptionKeysItem) {
    if (this.enumOptionKeys == null) {
      this.enumOptionKeys = new ArrayList<>();
    }
    this.enumOptionKeys.add(enumOptionKeysItem);
    return this;
  }

   /**
   * For operations that affect multiple &#x60;enum&#x60; options this defines the keys of the options that are affected.
   * @return enumOptionKeys
  **/
  @Schema(example = "[\"option1\",\"option2\",\"option3\"]", description = "For operations that affect multiple `enum` options this defines the keys of the options that are affected.")
  public List<String> getEnumOptionKeys() {
    return enumOptionKeys;
  }

  public void setEnumOptionKeys(List<String> enumOptionKeys) {
    this.enumOptionKeys = enumOptionKeys;
  }

  public AMetadataTemplateUpdateOperation multiSelectOptionKey(String multiSelectOptionKey) {
    this.multiSelectOptionKey = multiSelectOptionKey;
    return this;
  }

   /**
   * For operations that affect a single multi select option this defines the key of the option that is affected.
   * @return multiSelectOptionKey
  **/
  @Schema(example = "option1", description = "For operations that affect a single multi select option this defines the key of the option that is affected.")
  public String getMultiSelectOptionKey() {
    return multiSelectOptionKey;
  }

  public void setMultiSelectOptionKey(String multiSelectOptionKey) {
    this.multiSelectOptionKey = multiSelectOptionKey;
  }

  public AMetadataTemplateUpdateOperation multiSelectOptionKeys(List<String> multiSelectOptionKeys) {
    this.multiSelectOptionKeys = multiSelectOptionKeys;
    return this;
  }

  public AMetadataTemplateUpdateOperation addMultiSelectOptionKeysItem(String multiSelectOptionKeysItem) {
    if (this.multiSelectOptionKeys == null) {
      this.multiSelectOptionKeys = new ArrayList<>();
    }
    this.multiSelectOptionKeys.add(multiSelectOptionKeysItem);
    return this;
  }

   /**
   * For operations that affect multiple multi select options this defines the keys of the options that are affected.
   * @return multiSelectOptionKeys
  **/
  @Schema(example = "[\"option1\",\"option2\",\"option3\"]", description = "For operations that affect multiple multi select options this defines the keys of the options that are affected.")
  public List<String> getMultiSelectOptionKeys() {
    return multiSelectOptionKeys;
  }

  public void setMultiSelectOptionKeys(List<String> multiSelectOptionKeys) {
    this.multiSelectOptionKeys = multiSelectOptionKeys;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AMetadataTemplateUpdateOperation aMetadataTemplateUpdateOperation = (AMetadataTemplateUpdateOperation) o;
    return Objects.equals(this.op, aMetadataTemplateUpdateOperation.op) &&
        Objects.equals(this.data, aMetadataTemplateUpdateOperation.data) &&
        Objects.equals(this.fieldKey, aMetadataTemplateUpdateOperation.fieldKey) &&
        Objects.equals(this.fieldKeys, aMetadataTemplateUpdateOperation.fieldKeys) &&
        Objects.equals(this.enumOptionKey, aMetadataTemplateUpdateOperation.enumOptionKey) &&
        Objects.equals(this.enumOptionKeys, aMetadataTemplateUpdateOperation.enumOptionKeys) &&
        Objects.equals(this.multiSelectOptionKey, aMetadataTemplateUpdateOperation.multiSelectOptionKey) &&
        Objects.equals(this.multiSelectOptionKeys, aMetadataTemplateUpdateOperation.multiSelectOptionKeys);
  }

  @Override
  public int hashCode() {
    return Objects.hash(op, data, fieldKey, fieldKeys, enumOptionKey, enumOptionKeys, multiSelectOptionKey, multiSelectOptionKeys);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AMetadataTemplateUpdateOperation {\n");
    
    sb.append("    op: ").append(toIndentedString(op)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    fieldKey: ").append(toIndentedString(fieldKey)).append("\n");
    sb.append("    fieldKeys: ").append(toIndentedString(fieldKeys)).append("\n");
    sb.append("    enumOptionKey: ").append(toIndentedString(enumOptionKey)).append("\n");
    sb.append("    enumOptionKeys: ").append(toIndentedString(enumOptionKeys)).append("\n");
    sb.append("    multiSelectOptionKey: ").append(toIndentedString(multiSelectOptionKey)).append("\n");
    sb.append("    multiSelectOptionKeys: ").append(toIndentedString(multiSelectOptionKeys)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
