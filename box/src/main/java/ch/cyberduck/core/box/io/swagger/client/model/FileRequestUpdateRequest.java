/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * The request body to update a file request.
 */
@Schema(description = "The request body to update a file request.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class FileRequestUpdateRequest {
  @JsonProperty("title")
  private String title = null;

  @JsonProperty("description")
  private String description = null;

  /**
   * An optional new status of the file request.  When the status is set to &#x60;inactive&#x60;, the file request will no longer accept new submissions, and any visitor to the file request URL will receive a &#x60;HTTP 404&#x60; status code.  This will default to the value on the existing file request.
   */
  public enum StatusEnum {
    ACTIVE("active"),
    INACTIVE("inactive");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("is_email_required")
  private Boolean isEmailRequired = null;

  @JsonProperty("is_description_required")
  private Boolean isDescriptionRequired = null;

  @JsonProperty("expires_at")
  private DateTime expiresAt = null;

  public FileRequestUpdateRequest title(String title) {
    this.title = title;
    return this;
  }

   /**
   * An optional new title for the file request. This can be used to change the title of the file request.  This will default to the value on the existing file request.
   * @return title
  **/
  @Schema(example = "Please upload required documents", description = "An optional new title for the file request. This can be used to change the title of the file request.  This will default to the value on the existing file request.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public FileRequestUpdateRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * An optional new description for the file request. This can be used to change the description of the file request.  This will default to the value on the existing file request.
   * @return description
  **/
  @Schema(example = "Please upload required documents", description = "An optional new description for the file request. This can be used to change the description of the file request.  This will default to the value on the existing file request.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public FileRequestUpdateRequest status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * An optional new status of the file request.  When the status is set to &#x60;inactive&#x60;, the file request will no longer accept new submissions, and any visitor to the file request URL will receive a &#x60;HTTP 404&#x60; status code.  This will default to the value on the existing file request.
   * @return status
  **/
  @Schema(example = "active", description = "An optional new status of the file request.  When the status is set to `inactive`, the file request will no longer accept new submissions, and any visitor to the file request URL will receive a `HTTP 404` status code.  This will default to the value on the existing file request.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public FileRequestUpdateRequest isEmailRequired(Boolean isEmailRequired) {
    this.isEmailRequired = isEmailRequired;
    return this;
  }

   /**
   * Whether a file request submitter is required to provide their email address.  When this setting is set to true, the Box UI will show an email field on the file request form.  This will default to the value on the existing file request.
   * @return isEmailRequired
  **/
  @Schema(example = "true", description = "Whether a file request submitter is required to provide their email address.  When this setting is set to true, the Box UI will show an email field on the file request form.  This will default to the value on the existing file request.")
  public Boolean isIsEmailRequired() {
    return isEmailRequired;
  }

  public void setIsEmailRequired(Boolean isEmailRequired) {
    this.isEmailRequired = isEmailRequired;
  }

  public FileRequestUpdateRequest isDescriptionRequired(Boolean isDescriptionRequired) {
    this.isDescriptionRequired = isDescriptionRequired;
    return this;
  }

   /**
   * Whether a file request submitter is required to provide a description of the files they are submitting.  When this setting is set to true, the Box UI will show a description field on the file request form.  This will default to the value on the existing file request.
   * @return isDescriptionRequired
  **/
  @Schema(example = "true", description = "Whether a file request submitter is required to provide a description of the files they are submitting.  When this setting is set to true, the Box UI will show a description field on the file request form.  This will default to the value on the existing file request.")
  public Boolean isIsDescriptionRequired() {
    return isDescriptionRequired;
  }

  public void setIsDescriptionRequired(Boolean isDescriptionRequired) {
    this.isDescriptionRequired = isDescriptionRequired;
  }

  public FileRequestUpdateRequest expiresAt(DateTime expiresAt) {
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * The date after which a file request will no longer accept new submissions.  After this date, the &#x60;status&#x60; will automatically be set to &#x60;inactive&#x60;.  This will default to the value on the existing file request.
   * @return expiresAt
  **/
  @Schema(example = "2020-09-28T10:53:43-08:00", description = "The date after which a file request will no longer accept new submissions.  After this date, the `status` will automatically be set to `inactive`.  This will default to the value on the existing file request.")
  public DateTime getExpiresAt() {
    return expiresAt;
  }

  public void setExpiresAt(DateTime expiresAt) {
    this.expiresAt = expiresAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileRequestUpdateRequest fileRequestUpdateRequest = (FileRequestUpdateRequest) o;
    return Objects.equals(this.title, fileRequestUpdateRequest.title) &&
        Objects.equals(this.description, fileRequestUpdateRequest.description) &&
        Objects.equals(this.status, fileRequestUpdateRequest.status) &&
        Objects.equals(this.isEmailRequired, fileRequestUpdateRequest.isEmailRequired) &&
        Objects.equals(this.isDescriptionRequired, fileRequestUpdateRequest.isDescriptionRequired) &&
        Objects.equals(this.expiresAt, fileRequestUpdateRequest.expiresAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, description, status, isEmailRequired, isDescriptionRequired, expiresAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileRequestUpdateRequest {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    isEmailRequired: ").append(toIndentedString(isEmailRequired)).append("\n");
    sb.append("    isDescriptionRequired: ").append(toIndentedString(isDescriptionRequired)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
