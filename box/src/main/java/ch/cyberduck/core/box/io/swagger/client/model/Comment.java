/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.CommentBase;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * Standard representation of a comment.
 */
@Schema(description = "Standard representation of a comment.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class Comment extends CommentBase {
  @JsonProperty("is_reply_comment")
  private Boolean isReplyComment = null;

  @JsonProperty("message")
  private String message = null;

  @JsonProperty("created_by")
  private Object createdBy = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("modified_at")
  private DateTime modifiedAt = null;

  @JsonProperty("item")
  private Object item = null;

  public Comment isReplyComment(Boolean isReplyComment) {
    this.isReplyComment = isReplyComment;
    return this;
  }

   /**
   * Whether or not this comment is a reply to another comment
   * @return isReplyComment
  **/
  @Schema(example = "true", description = "Whether or not this comment is a reply to another comment")
  public Boolean isIsReplyComment() {
    return isReplyComment;
  }

  public void setIsReplyComment(Boolean isReplyComment) {
    this.isReplyComment = isReplyComment;
  }

  public Comment message(String message) {
    this.message = message;
    return this;
  }

   /**
   * The text of the comment, as provided by the user
   * @return message
  **/
  @Schema(example = "@Aaron Levie these tigers are cool!", description = "The text of the comment, as provided by the user")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public Comment createdBy(Object createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @Schema(description = "")
  public Object getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Object createdBy) {
    this.createdBy = createdBy;
  }

  public Comment createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The time this comment was created
   * @return createdAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "The time this comment was created")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Comment modifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * The time this comment was last modified
   * @return modifiedAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "The time this comment was last modified")
  public DateTime getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  public Comment item(Object item) {
    this.item = item;
    return this;
  }

   /**
   * Get item
   * @return item
  **/
  @Schema(description = "")
  public Object getItem() {
    return item;
  }

  public void setItem(Object item) {
    this.item = item;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Comment comment = (Comment) o;
    return Objects.equals(this.isReplyComment, comment.isReplyComment) &&
        Objects.equals(this.message, comment.message) &&
        Objects.equals(this.createdBy, comment.createdBy) &&
        Objects.equals(this.createdAt, comment.createdAt) &&
        Objects.equals(this.modifiedAt, comment.modifiedAt) &&
        Objects.equals(this.item, comment.item) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isReplyComment, message, createdBy, createdAt, modifiedAt, item, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Comment {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    isReplyComment: ").append(toIndentedString(isReplyComment)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
