/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Body47
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class Body47 {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("login")
  private String login = null;

  @JsonProperty("is_platform_access_only")
  private Boolean isPlatformAccessOnly = null;

  /**
   * The user’s enterprise role
   */
  public enum RoleEnum {
    COADMIN("coadmin"),
    USER("user");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static RoleEnum fromValue(String text) {
      for (RoleEnum b : RoleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("role")
  private RoleEnum role = null;

  @JsonProperty("language")
  private String language = null;

  @JsonProperty("is_sync_enabled")
  private Boolean isSyncEnabled = null;

  @JsonProperty("job_title")
  private String jobTitle = null;

  @JsonProperty("phone")
  private String phone = null;

  @JsonProperty("address")
  private String address = null;

  @JsonProperty("space_amount")
  private Long spaceAmount = null;

  @JsonProperty("tracking_codes")
  private List<String> trackingCodes = null;

  @JsonProperty("can_see_managed_users")
  private Boolean canSeeManagedUsers = null;

  @JsonProperty("timezone")
  private String timezone = null;

  @JsonProperty("is_external_collab_restricted")
  private Boolean isExternalCollabRestricted = null;

  @JsonProperty("is_exempt_from_device_limits")
  private Boolean isExemptFromDeviceLimits = null;

  @JsonProperty("is_exempt_from_login_verification")
  private Boolean isExemptFromLoginVerification = null;

  /**
   * The user&#x27;s account status
   */
  public enum StatusEnum {
    ACTIVE("active"),
    INACTIVE("inactive"),
    CANNOT_DELETE_EDIT("cannot_delete_edit"),
    CANNOT_DELETE_EDIT_UPLOAD("cannot_delete_edit_upload");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("external_app_user_id")
  private String externalAppUserId = null;

  public Body47 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the user
   * @return name
  **/
  @Schema(example = "Aaron Levie", required = true, description = "The name of the user")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Body47 login(String login) {
    this.login = login;
    return this;
  }

   /**
   * The email address the user uses to log in  Required, unless &#x60;is_platform_access_only&#x60; is set to &#x60;true&#x60;.
   * @return login
  **/
  @Schema(example = "boss@box.com", description = "The email address the user uses to log in  Required, unless `is_platform_access_only` is set to `true`.")
  public String getLogin() {
    return login;
  }

  public void setLogin(String login) {
    this.login = login;
  }

  public Body47 isPlatformAccessOnly(Boolean isPlatformAccessOnly) {
    this.isPlatformAccessOnly = isPlatformAccessOnly;
    return this;
  }

   /**
   * Specifies that the user is an app user.
   * @return isPlatformAccessOnly
  **/
  @Schema(example = "true", description = "Specifies that the user is an app user.")
  public Boolean isIsPlatformAccessOnly() {
    return isPlatformAccessOnly;
  }

  public void setIsPlatformAccessOnly(Boolean isPlatformAccessOnly) {
    this.isPlatformAccessOnly = isPlatformAccessOnly;
  }

  public Body47 role(RoleEnum role) {
    this.role = role;
    return this;
  }

   /**
   * The user’s enterprise role
   * @return role
  **/
  @Schema(example = "user", description = "The user’s enterprise role")
  public RoleEnum getRole() {
    return role;
  }

  public void setRole(RoleEnum role) {
    this.role = role;
  }

  public Body47 language(String language) {
    this.language = language;
    return this;
  }

   /**
   * The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format.
   * @return language
  **/
  @Schema(example = "en", description = "The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format.")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public Body47 isSyncEnabled(Boolean isSyncEnabled) {
    this.isSyncEnabled = isSyncEnabled;
    return this;
  }

   /**
   * Whether the user can use Box Sync
   * @return isSyncEnabled
  **/
  @Schema(example = "true", description = "Whether the user can use Box Sync")
  public Boolean isIsSyncEnabled() {
    return isSyncEnabled;
  }

  public void setIsSyncEnabled(Boolean isSyncEnabled) {
    this.isSyncEnabled = isSyncEnabled;
  }

  public Body47 jobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * The user’s job title
   * @return jobTitle
  **/
  @Schema(example = "CEO", description = "The user’s job title")
  public String getJobTitle() {
    return jobTitle;
  }

  public void setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
  }

  public Body47 phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * The user’s phone number
   * @return phone
  **/
  @Schema(example = "6509241374", description = "The user’s phone number")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public Body47 address(String address) {
    this.address = address;
    return this;
  }

   /**
   * The user’s address
   * @return address
  **/
  @Schema(example = "900 Jefferson Ave, Redwood City, CA 94063", description = "The user’s address")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public Body47 spaceAmount(Long spaceAmount) {
    this.spaceAmount = spaceAmount;
    return this;
  }

   /**
   * The user’s total available space in bytes. Set this to &#x60;-1&#x60; to indicate unlimited storage.
   * @return spaceAmount
  **/
  @Schema(example = "11345156112", description = "The user’s total available space in bytes. Set this to `-1` to indicate unlimited storage.")
  public Long getSpaceAmount() {
    return spaceAmount;
  }

  public void setSpaceAmount(Long spaceAmount) {
    this.spaceAmount = spaceAmount;
  }

  public Body47 trackingCodes(List<String> trackingCodes) {
    this.trackingCodes = trackingCodes;
    return this;
  }

  public Body47 addTrackingCodesItem(String trackingCodesItem) {
    if (this.trackingCodes == null) {
      this.trackingCodes = new ArrayList<>();
    }
    this.trackingCodes.add(trackingCodesItem);
    return this;
  }

   /**
   * Tracking codes allow an admin to generate reports from the admin console and assign an attribute to a specific group of users. This setting must be enabled for an enterprise before it can be used.
   * @return trackingCodes
  **/
  @Schema(example = "[\"code1: 12345\"]", description = "Tracking codes allow an admin to generate reports from the admin console and assign an attribute to a specific group of users. This setting must be enabled for an enterprise before it can be used.")
  public List<String> getTrackingCodes() {
    return trackingCodes;
  }

  public void setTrackingCodes(List<String> trackingCodes) {
    this.trackingCodes = trackingCodes;
  }

  public Body47 canSeeManagedUsers(Boolean canSeeManagedUsers) {
    this.canSeeManagedUsers = canSeeManagedUsers;
    return this;
  }

   /**
   * Whether the user can see other enterprise users in their contact list
   * @return canSeeManagedUsers
  **/
  @Schema(example = "true", description = "Whether the user can see other enterprise users in their contact list")
  public Boolean isCanSeeManagedUsers() {
    return canSeeManagedUsers;
  }

  public void setCanSeeManagedUsers(Boolean canSeeManagedUsers) {
    this.canSeeManagedUsers = canSeeManagedUsers;
  }

  public Body47 timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * The user&#x27;s timezone
   * @return timezone
  **/
  @Schema(example = "Africa/Bujumbura", description = "The user's timezone")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public Body47 isExternalCollabRestricted(Boolean isExternalCollabRestricted) {
    this.isExternalCollabRestricted = isExternalCollabRestricted;
    return this;
  }

   /**
   * Whether the user is allowed to collaborate with users outside their enterprise
   * @return isExternalCollabRestricted
  **/
  @Schema(example = "true", description = "Whether the user is allowed to collaborate with users outside their enterprise")
  public Boolean isIsExternalCollabRestricted() {
    return isExternalCollabRestricted;
  }

  public void setIsExternalCollabRestricted(Boolean isExternalCollabRestricted) {
    this.isExternalCollabRestricted = isExternalCollabRestricted;
  }

  public Body47 isExemptFromDeviceLimits(Boolean isExemptFromDeviceLimits) {
    this.isExemptFromDeviceLimits = isExemptFromDeviceLimits;
    return this;
  }

   /**
   * Whether to exempt the user from enterprise device limits
   * @return isExemptFromDeviceLimits
  **/
  @Schema(example = "true", description = "Whether to exempt the user from enterprise device limits")
  public Boolean isIsExemptFromDeviceLimits() {
    return isExemptFromDeviceLimits;
  }

  public void setIsExemptFromDeviceLimits(Boolean isExemptFromDeviceLimits) {
    this.isExemptFromDeviceLimits = isExemptFromDeviceLimits;
  }

  public Body47 isExemptFromLoginVerification(Boolean isExemptFromLoginVerification) {
    this.isExemptFromLoginVerification = isExemptFromLoginVerification;
    return this;
  }

   /**
   * Whether the user must use two-factor authentication
   * @return isExemptFromLoginVerification
  **/
  @Schema(example = "true", description = "Whether the user must use two-factor authentication")
  public Boolean isIsExemptFromLoginVerification() {
    return isExemptFromLoginVerification;
  }

  public void setIsExemptFromLoginVerification(Boolean isExemptFromLoginVerification) {
    this.isExemptFromLoginVerification = isExemptFromLoginVerification;
  }

  public Body47 status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The user&#x27;s account status
   * @return status
  **/
  @Schema(example = "active", description = "The user's account status")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Body47 externalAppUserId(String externalAppUserId) {
    this.externalAppUserId = externalAppUserId;
    return this;
  }

   /**
   * An external identifier for an app user, which can be used to look up the user. This can be used to tie user IDs from external identity providers to Box users.
   * @return externalAppUserId
  **/
  @Schema(example = "my-user-1234", description = "An external identifier for an app user, which can be used to look up the user. This can be used to tie user IDs from external identity providers to Box users.")
  public String getExternalAppUserId() {
    return externalAppUserId;
  }

  public void setExternalAppUserId(String externalAppUserId) {
    this.externalAppUserId = externalAppUserId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body47 body47 = (Body47) o;
    return Objects.equals(this.name, body47.name) &&
        Objects.equals(this.login, body47.login) &&
        Objects.equals(this.isPlatformAccessOnly, body47.isPlatformAccessOnly) &&
        Objects.equals(this.role, body47.role) &&
        Objects.equals(this.language, body47.language) &&
        Objects.equals(this.isSyncEnabled, body47.isSyncEnabled) &&
        Objects.equals(this.jobTitle, body47.jobTitle) &&
        Objects.equals(this.phone, body47.phone) &&
        Objects.equals(this.address, body47.address) &&
        Objects.equals(this.spaceAmount, body47.spaceAmount) &&
        Objects.equals(this.trackingCodes, body47.trackingCodes) &&
        Objects.equals(this.canSeeManagedUsers, body47.canSeeManagedUsers) &&
        Objects.equals(this.timezone, body47.timezone) &&
        Objects.equals(this.isExternalCollabRestricted, body47.isExternalCollabRestricted) &&
        Objects.equals(this.isExemptFromDeviceLimits, body47.isExemptFromDeviceLimits) &&
        Objects.equals(this.isExemptFromLoginVerification, body47.isExemptFromLoginVerification) &&
        Objects.equals(this.status, body47.status) &&
        Objects.equals(this.externalAppUserId, body47.externalAppUserId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, login, isPlatformAccessOnly, role, language, isSyncEnabled, jobTitle, phone, address, spaceAmount, trackingCodes, canSeeManagedUsers, timezone, isExternalCollabRestricted, isExemptFromDeviceLimits, isExemptFromLoginVerification, status, externalAppUserId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body47 {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    isPlatformAccessOnly: ").append(toIndentedString(isPlatformAccessOnly)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    isSyncEnabled: ").append(toIndentedString(isSyncEnabled)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    spaceAmount: ").append(toIndentedString(spaceAmount)).append("\n");
    sb.append("    trackingCodes: ").append(toIndentedString(trackingCodes)).append("\n");
    sb.append("    canSeeManagedUsers: ").append(toIndentedString(canSeeManagedUsers)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    isExternalCollabRestricted: ").append(toIndentedString(isExternalCollabRestricted)).append("\n");
    sb.append("    isExemptFromDeviceLimits: ").append(toIndentedString(isExemptFromDeviceLimits)).append("\n");
    sb.append("    isExemptFromLoginVerification: ").append(toIndentedString(isExemptFromLoginVerification)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    externalAppUserId: ").append(toIndentedString(externalAppUserId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
