/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.User;
import ch.cyberduck.core.box.io.swagger.client.model.UserFullTrackingCodes;
import ch.cyberduck.core.box.io.swagger.client.model.UserNotificationEmail;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
/**
 * A full representation of a user, as can be returned from any user API endpoint.
 */
@Schema(description = "A full representation of a user, as can be returned from any user API endpoint.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class UserFull extends User {
  /**
   * The user’s enterprise role
   */
  public enum RoleEnum {
    ADMIN("admin"),
    COADMIN("coadmin"),
    USER("user");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static RoleEnum fromValue(String text) {
      for (RoleEnum b : RoleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("role")
  private RoleEnum role = null;

  @JsonProperty("tracking_codes")
  private List<UserFullTrackingCodes> trackingCodes = null;

  @JsonProperty("can_see_managed_users")
  private Boolean canSeeManagedUsers = null;

  @JsonProperty("is_sync_enabled")
  private Boolean isSyncEnabled = null;

  @JsonProperty("is_external_collab_restricted")
  private Boolean isExternalCollabRestricted = null;

  @JsonProperty("is_exempt_from_device_limits")
  private Boolean isExemptFromDeviceLimits = null;

  @JsonProperty("is_exempt_from_login_verification")
  private Boolean isExemptFromLoginVerification = null;

  @JsonProperty("enterprise")
  private Object enterprise = null;

  @JsonProperty("my_tags")
  private List<String> myTags = null;

  @JsonProperty("hostname")
  private String hostname = null;

  @JsonProperty("is_platform_access_only")
  private Boolean isPlatformAccessOnly = null;

  @JsonProperty("external_app_user_id")
  private String externalAppUserId = null;

  public UserFull role(RoleEnum role) {
    this.role = role;
    return this;
  }

   /**
   * The user’s enterprise role
   * @return role
  **/
  @Schema(example = "admin", description = "The user’s enterprise role")
  public RoleEnum getRole() {
    return role;
  }

  public void setRole(RoleEnum role) {
    this.role = role;
  }

  public UserFull trackingCodes(List<UserFullTrackingCodes> trackingCodes) {
    this.trackingCodes = trackingCodes;
    return this;
  }

  public UserFull addTrackingCodesItem(UserFullTrackingCodes trackingCodesItem) {
    if (this.trackingCodes == null) {
      this.trackingCodes = new ArrayList<>();
    }
    this.trackingCodes.add(trackingCodesItem);
    return this;
  }

   /**
   * Tracking codes allow an admin to generate reports from the admin console and assign an attribute to a specific group of users. This setting must be enabled for an enterprise before it can be used.
   * @return trackingCodes
  **/
  @Schema(description = "Tracking codes allow an admin to generate reports from the admin console and assign an attribute to a specific group of users. This setting must be enabled for an enterprise before it can be used.")
  public List<UserFullTrackingCodes> getTrackingCodes() {
    return trackingCodes;
  }

  public void setTrackingCodes(List<UserFullTrackingCodes> trackingCodes) {
    this.trackingCodes = trackingCodes;
  }

  public UserFull canSeeManagedUsers(Boolean canSeeManagedUsers) {
    this.canSeeManagedUsers = canSeeManagedUsers;
    return this;
  }

   /**
   * Whether the user can see other enterprise users in their contact list
   * @return canSeeManagedUsers
  **/
  @Schema(example = "true", description = "Whether the user can see other enterprise users in their contact list")
  public Boolean isCanSeeManagedUsers() {
    return canSeeManagedUsers;
  }

  public void setCanSeeManagedUsers(Boolean canSeeManagedUsers) {
    this.canSeeManagedUsers = canSeeManagedUsers;
  }

  public UserFull isSyncEnabled(Boolean isSyncEnabled) {
    this.isSyncEnabled = isSyncEnabled;
    return this;
  }

   /**
   * Whether the user can use Box Sync
   * @return isSyncEnabled
  **/
  @Schema(example = "true", description = "Whether the user can use Box Sync")
  public Boolean isIsSyncEnabled() {
    return isSyncEnabled;
  }

  public void setIsSyncEnabled(Boolean isSyncEnabled) {
    this.isSyncEnabled = isSyncEnabled;
  }

  public UserFull isExternalCollabRestricted(Boolean isExternalCollabRestricted) {
    this.isExternalCollabRestricted = isExternalCollabRestricted;
    return this;
  }

   /**
   * Whether the user is allowed to collaborate with users outside their enterprise
   * @return isExternalCollabRestricted
  **/
  @Schema(example = "true", description = "Whether the user is allowed to collaborate with users outside their enterprise")
  public Boolean isIsExternalCollabRestricted() {
    return isExternalCollabRestricted;
  }

  public void setIsExternalCollabRestricted(Boolean isExternalCollabRestricted) {
    this.isExternalCollabRestricted = isExternalCollabRestricted;
  }

  public UserFull isExemptFromDeviceLimits(Boolean isExemptFromDeviceLimits) {
    this.isExemptFromDeviceLimits = isExemptFromDeviceLimits;
    return this;
  }

   /**
   * Whether to exempt the user from Enterprise device limits
   * @return isExemptFromDeviceLimits
  **/
  @Schema(example = "true", description = "Whether to exempt the user from Enterprise device limits")
  public Boolean isIsExemptFromDeviceLimits() {
    return isExemptFromDeviceLimits;
  }

  public void setIsExemptFromDeviceLimits(Boolean isExemptFromDeviceLimits) {
    this.isExemptFromDeviceLimits = isExemptFromDeviceLimits;
  }

  public UserFull isExemptFromLoginVerification(Boolean isExemptFromLoginVerification) {
    this.isExemptFromLoginVerification = isExemptFromLoginVerification;
    return this;
  }

   /**
   * Whether the user must use two-factor authentication
   * @return isExemptFromLoginVerification
  **/
  @Schema(example = "true", description = "Whether the user must use two-factor authentication")
  public Boolean isIsExemptFromLoginVerification() {
    return isExemptFromLoginVerification;
  }

  public void setIsExemptFromLoginVerification(Boolean isExemptFromLoginVerification) {
    this.isExemptFromLoginVerification = isExemptFromLoginVerification;
  }

  public UserFull enterprise(Object enterprise) {
    this.enterprise = enterprise;
    return this;
  }

   /**
   * Get enterprise
   * @return enterprise
  **/
  @Schema(description = "")
  public Object getEnterprise() {
    return enterprise;
  }

  public void setEnterprise(Object enterprise) {
    this.enterprise = enterprise;
  }

  public UserFull myTags(List<String> myTags) {
    this.myTags = myTags;
    return this;
  }

  public UserFull addMyTagsItem(String myTagsItem) {
    if (this.myTags == null) {
      this.myTags = new ArrayList<>();
    }
    this.myTags.add(myTagsItem);
    return this;
  }

   /**
   * Tags for all files and folders owned by the user. Values returned will only contain tags that were set by the requester.
   * @return myTags
  **/
  @Schema(example = "[\"important\"]", description = "Tags for all files and folders owned by the user. Values returned will only contain tags that were set by the requester.")
  public List<String> getMyTags() {
    return myTags;
  }

  public void setMyTags(List<String> myTags) {
    this.myTags = myTags;
  }

  public UserFull hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * The root (protocol, subdomain, domain) of any links that need to be generated for the user
   * @return hostname
  **/
  @Schema(example = "https://example.app.box.com/", description = "The root (protocol, subdomain, domain) of any links that need to be generated for the user")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public UserFull isPlatformAccessOnly(Boolean isPlatformAccessOnly) {
    this.isPlatformAccessOnly = isPlatformAccessOnly;
    return this;
  }

   /**
   * Whether the user is an App User
   * @return isPlatformAccessOnly
  **/
  @Schema(example = "true", description = "Whether the user is an App User")
  public Boolean isIsPlatformAccessOnly() {
    return isPlatformAccessOnly;
  }

  public void setIsPlatformAccessOnly(Boolean isPlatformAccessOnly) {
    this.isPlatformAccessOnly = isPlatformAccessOnly;
  }

  public UserFull externalAppUserId(String externalAppUserId) {
    this.externalAppUserId = externalAppUserId;
    return this;
  }

   /**
   * An external identifier for an app user, which can be used to look up the user. This can be used to tie user IDs from external identity providers to Box users.
   * @return externalAppUserId
  **/
  @Schema(example = "my-user-1234", description = "An external identifier for an app user, which can be used to look up the user. This can be used to tie user IDs from external identity providers to Box users.")
  public String getExternalAppUserId() {
    return externalAppUserId;
  }

  public void setExternalAppUserId(String externalAppUserId) {
    this.externalAppUserId = externalAppUserId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserFull userFull = (UserFull) o;
    return Objects.equals(this.role, userFull.role) &&
        Objects.equals(this.trackingCodes, userFull.trackingCodes) &&
        Objects.equals(this.canSeeManagedUsers, userFull.canSeeManagedUsers) &&
        Objects.equals(this.isSyncEnabled, userFull.isSyncEnabled) &&
        Objects.equals(this.isExternalCollabRestricted, userFull.isExternalCollabRestricted) &&
        Objects.equals(this.isExemptFromDeviceLimits, userFull.isExemptFromDeviceLimits) &&
        Objects.equals(this.isExemptFromLoginVerification, userFull.isExemptFromLoginVerification) &&
        Objects.equals(this.enterprise, userFull.enterprise) &&
        Objects.equals(this.myTags, userFull.myTags) &&
        Objects.equals(this.hostname, userFull.hostname) &&
        Objects.equals(this.isPlatformAccessOnly, userFull.isPlatformAccessOnly) &&
        Objects.equals(this.externalAppUserId, userFull.externalAppUserId) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(role, trackingCodes, canSeeManagedUsers, isSyncEnabled, isExternalCollabRestricted, isExemptFromDeviceLimits, isExemptFromLoginVerification, enterprise, myTags, hostname, isPlatformAccessOnly, externalAppUserId, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserFull {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    trackingCodes: ").append(toIndentedString(trackingCodes)).append("\n");
    sb.append("    canSeeManagedUsers: ").append(toIndentedString(canSeeManagedUsers)).append("\n");
    sb.append("    isSyncEnabled: ").append(toIndentedString(isSyncEnabled)).append("\n");
    sb.append("    isExternalCollabRestricted: ").append(toIndentedString(isExternalCollabRestricted)).append("\n");
    sb.append("    isExemptFromDeviceLimits: ").append(toIndentedString(isExemptFromDeviceLimits)).append("\n");
    sb.append("    isExemptFromLoginVerification: ").append(toIndentedString(isExemptFromLoginVerification)).append("\n");
    sb.append("    enterprise: ").append(toIndentedString(enterprise)).append("\n");
    sb.append("    myTags: ").append(toIndentedString(myTags)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    isPlatformAccessOnly: ").append(toIndentedString(isPlatformAccessOnly)).append("\n");
    sb.append("    externalAppUserId: ").append(toIndentedString(externalAppUserId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
