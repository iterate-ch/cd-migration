/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * A standard representation of a file request, as returned from any file request API endpoints by default.
 */
@Schema(description = "A standard representation of a file request, as returned from any file request API endpoints by default.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class FileRequest {
  @JsonProperty("id")
  private String id = null;

  /**
   * &#x60;file-request&#x60;
   */
  public enum TypeEnum {
    REQUEST("file-request");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("description")
  private String description = null;

  /**
   * The status of the file request. This defaults to &#x60;active&#x60;.  When the status is set to &#x60;inactive&#x60;, the file request will no longer accept new submissions, and any visitor to the file request URL will receive a &#x60;HTTP 404&#x60; status code.  This defaults to status of file request that was copied to create this file request.
   */
  public enum StatusEnum {
    ACTIVE("active"),
    INACTIVE("inactive");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("is_email_required")
  private Boolean isEmailRequired = null;

  @JsonProperty("is_description_required")
  private Boolean isDescriptionRequired = null;

  @JsonProperty("expires_at")
  private DateTime expiresAt = null;

  @JsonProperty("folder")
  private AllOfFileRequestFolder folder = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("etag")
  private String etag = null;

  @JsonProperty("created_by")
  private AllOfFileRequestCreatedBy createdBy = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("updated_by")
  private AllOfFileRequestUpdatedBy updatedBy = null;

  @JsonProperty("updated_at")
  private DateTime updatedAt = null;

   /**
   * The unique identifier for this file request.
   * @return id
  **/
  @Schema(example = "42037322", description = "The unique identifier for this file request.")
  public String getId() {
    return id;
  }

   /**
   * &#x60;file-request&#x60;
   * @return type
  **/
  @Schema(example = "file-request", description = "`file-request`")
  public TypeEnum getType() {
    return type;
  }

  public FileRequest title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of file request. This is shown in the Box UI to users uploading files.  This defaults to title of the file request that was copied to create this file request.
   * @return title
  **/
  @Schema(example = "Please upload documents", description = "The title of file request. This is shown in the Box UI to users uploading files.  This defaults to title of the file request that was copied to create this file request.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public FileRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The optional description of this file request. This is shown in the Box UI to users uploading files.  This defaults to description of the file request that was copied to create this file request.
   * @return description
  **/
  @Schema(example = "Following documents are requested for your process", description = "The optional description of this file request. This is shown in the Box UI to users uploading files.  This defaults to description of the file request that was copied to create this file request.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public FileRequest status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the file request. This defaults to &#x60;active&#x60;.  When the status is set to &#x60;inactive&#x60;, the file request will no longer accept new submissions, and any visitor to the file request URL will receive a &#x60;HTTP 404&#x60; status code.  This defaults to status of file request that was copied to create this file request.
   * @return status
  **/
  @Schema(example = "active", description = "The status of the file request. This defaults to `active`.  When the status is set to `inactive`, the file request will no longer accept new submissions, and any visitor to the file request URL will receive a `HTTP 404` status code.  This defaults to status of file request that was copied to create this file request.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public FileRequest isEmailRequired(Boolean isEmailRequired) {
    this.isEmailRequired = isEmailRequired;
    return this;
  }

   /**
   * Whether a file request submitter is required to provide their email address.  When this setting is set to true, the Box UI will show an email field on the file request form.  This defaults to setting of file request that was copied to create this file request.
   * @return isEmailRequired
  **/
  @Schema(example = "true", description = "Whether a file request submitter is required to provide their email address.  When this setting is set to true, the Box UI will show an email field on the file request form.  This defaults to setting of file request that was copied to create this file request.")
  public Boolean isIsEmailRequired() {
    return isEmailRequired;
  }

  public void setIsEmailRequired(Boolean isEmailRequired) {
    this.isEmailRequired = isEmailRequired;
  }

  public FileRequest isDescriptionRequired(Boolean isDescriptionRequired) {
    this.isDescriptionRequired = isDescriptionRequired;
    return this;
  }

   /**
   * Whether a file request submitter is required to provide a description of the files they are submitting.  When this setting is set to true, the Box UI will show a description field on the file request form.  This defaults to setting of file request that was copied to create this file request.
   * @return isDescriptionRequired
  **/
  @Schema(example = "true", description = "Whether a file request submitter is required to provide a description of the files they are submitting.  When this setting is set to true, the Box UI will show a description field on the file request form.  This defaults to setting of file request that was copied to create this file request.")
  public Boolean isIsDescriptionRequired() {
    return isDescriptionRequired;
  }

  public void setIsDescriptionRequired(Boolean isDescriptionRequired) {
    this.isDescriptionRequired = isDescriptionRequired;
  }

  public FileRequest expiresAt(DateTime expiresAt) {
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * The date after which a file request will no longer accept new submissions.  After this date, the &#x60;status&#x60; will automatically be set to &#x60;inactive&#x60;.
   * @return expiresAt
  **/
  @Schema(example = "2020-09-28T10:53:43-08:00", description = "The date after which a file request will no longer accept new submissions.  After this date, the `status` will automatically be set to `inactive`.")
  public DateTime getExpiresAt() {
    return expiresAt;
  }

  public void setExpiresAt(DateTime expiresAt) {
    this.expiresAt = expiresAt;
  }

  public FileRequest folder(AllOfFileRequestFolder folder) {
    this.folder = folder;
    return this;
  }

   /**
   * Get folder
   * @return folder
  **/
  @Schema(description = "")
  public AllOfFileRequestFolder getFolder() {
    return folder;
  }

  public void setFolder(AllOfFileRequestFolder folder) {
    this.folder = folder;
  }

   /**
   * The generated URL for this file request. This URL can be shared with users to let them upload files to the associated folder.
   * @return url
  **/
  @Schema(example = "https://cloud.app.box.com/f/19e57f40ace247278a8e3d336678c64a", description = "The generated URL for this file request. This URL can be shared with users to let them upload files to the associated folder.")
  public String getUrl() {
    return url;
  }

  public FileRequest etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * The HTTP &#x60;etag&#x60; of this file. This can be used in combination with the &#x60;If-Match&#x60; header when updating a file request. By providing that header, a change will only be performed on the  file request if the &#x60;etag&#x60; on the file request still matches the &#x60;etag&#x60; provided in the &#x60;If-Match&#x60; header.
   * @return etag
  **/
  @Schema(example = "1", description = "The HTTP `etag` of this file. This can be used in combination with the `If-Match` header when updating a file request. By providing that header, a change will only be performed on the  file request if the `etag` on the file request still matches the `etag` provided in the `If-Match` header.")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }

  public FileRequest createdBy(AllOfFileRequestCreatedBy createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @Schema(description = "")
  public AllOfFileRequestCreatedBy getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(AllOfFileRequestCreatedBy createdBy) {
    this.createdBy = createdBy;
  }

  public FileRequest createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The date and time when the file request was created.
   * @return createdAt
  **/
  @Schema(example = "2020-09-28T10:53:43-08:00", description = "The date and time when the file request was created.")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public FileRequest updatedBy(AllOfFileRequestUpdatedBy updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Get updatedBy
   * @return updatedBy
  **/
  @Schema(description = "")
  public AllOfFileRequestUpdatedBy getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(AllOfFileRequestUpdatedBy updatedBy) {
    this.updatedBy = updatedBy;
  }

  public FileRequest updatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The date and time when the file request was last updated.
   * @return updatedAt
  **/
  @Schema(example = "2020-09-28T10:53:43-08:00", description = "The date and time when the file request was last updated.")
  public DateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileRequest fileRequest = (FileRequest) o;
    return Objects.equals(this.id, fileRequest.id) &&
        Objects.equals(this.type, fileRequest.type) &&
        Objects.equals(this.title, fileRequest.title) &&
        Objects.equals(this.description, fileRequest.description) &&
        Objects.equals(this.status, fileRequest.status) &&
        Objects.equals(this.isEmailRequired, fileRequest.isEmailRequired) &&
        Objects.equals(this.isDescriptionRequired, fileRequest.isDescriptionRequired) &&
        Objects.equals(this.expiresAt, fileRequest.expiresAt) &&
        Objects.equals(this.folder, fileRequest.folder) &&
        Objects.equals(this.url, fileRequest.url) &&
        Objects.equals(this.etag, fileRequest.etag) &&
        Objects.equals(this.createdBy, fileRequest.createdBy) &&
        Objects.equals(this.createdAt, fileRequest.createdAt) &&
        Objects.equals(this.updatedBy, fileRequest.updatedBy) &&
        Objects.equals(this.updatedAt, fileRequest.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, title, description, status, isEmailRequired, isDescriptionRequired, expiresAt, folder, url, etag, createdBy, createdAt, updatedBy, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileRequest {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    isEmailRequired: ").append(toIndentedString(isEmailRequired)).append("\n");
    sb.append("    isDescriptionRequired: ").append(toIndentedString(isDescriptionRequired)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    folder: ").append(toIndentedString(folder)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
