/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.CommentsItem;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Body31
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class Body31 {
  @JsonProperty("message")
  private String message = null;

  @JsonProperty("tagged_message")
  private String taggedMessage = null;

  @JsonProperty("item")
  private CommentsItem item = null;

  public Body31 message(String message) {
    this.message = message;
    return this;
  }

   /**
   * The text of the comment.  To mention a user, use the &#x60;tagged_message&#x60; parameter instead.
   * @return message
  **/
  @Schema(example = "Review completed!", required = true, description = "The text of the comment.  To mention a user, use the `tagged_message` parameter instead.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public Body31 taggedMessage(String taggedMessage) {
    this.taggedMessage = taggedMessage;
    return this;
  }

   /**
   * The text of the comment, including &#x60;@[user_id:name]&#x60; somewhere in the message to mention another user, which will send them an email notification, letting them know they have been mentioned.  The &#x60;user_id&#x60; is the target user&#x27;s ID, where the &#x60;name&#x60; can be any custom phrase. In the Box UI this name will link to the user&#x27;s profile.  If you are not mentioning another user, use &#x60;message&#x60; instead.
   * @return taggedMessage
  **/
  @Schema(example = "@[1234:John] Review completed!", description = "The text of the comment, including `@[user_id:name]` somewhere in the message to mention another user, which will send them an email notification, letting them know they have been mentioned.  The `user_id` is the target user's ID, where the `name` can be any custom phrase. In the Box UI this name will link to the user's profile.  If you are not mentioning another user, use `message` instead.")
  public String getTaggedMessage() {
    return taggedMessage;
  }

  public void setTaggedMessage(String taggedMessage) {
    this.taggedMessage = taggedMessage;
  }

  public Body31 item(CommentsItem item) {
    this.item = item;
    return this;
  }

   /**
   * Get item
   * @return item
  **/
  @Schema(description = "")
  public CommentsItem getItem() {
    return item;
  }

  public void setItem(CommentsItem item) {
    this.item = item;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body31 body31 = (Body31) o;
    return Objects.equals(this.message, body31.message) &&
        Objects.equals(this.taggedMessage, body31.taggedMessage) &&
        Objects.equals(this.item, body31.item);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, taggedMessage, item);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body31 {\n");
    
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    taggedMessage: ").append(toIndentedString(taggedMessage)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
