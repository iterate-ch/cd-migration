/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.ZipDownloadRequestItems;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * A request to create a &#x60;zip&#x60; archive to download
 */
@Schema(description = "A request to create a `zip` archive to download")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class ZipDownloadRequest {
  @JsonProperty("items")
  private List<ZipDownloadRequestItems> items = new ArrayList<>();

  @JsonProperty("download_file_name")
  private String downloadFileName = null;

  public ZipDownloadRequest items(List<ZipDownloadRequestItems> items) {
    this.items = items;
    return this;
  }

  public ZipDownloadRequest addItemsItem(ZipDownloadRequestItems itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * A list of items to add to the &#x60;zip&#x60; archive. These can be folders or files.
   * @return items
  **/
  @Schema(required = true, description = "A list of items to add to the `zip` archive. These can be folders or files.")
  public List<ZipDownloadRequestItems> getItems() {
    return items;
  }

  public void setItems(List<ZipDownloadRequestItems> items) {
    this.items = items;
  }

  public ZipDownloadRequest downloadFileName(String downloadFileName) {
    this.downloadFileName = downloadFileName;
    return this;
  }

   /**
   * The optional name of the &#x60;zip&#x60; archive. This name will be appended by the &#x60;.zip&#x60; file extension, for example &#x60;January Financials.zip&#x60;.
   * @return downloadFileName
  **/
  @Schema(example = "January Financials", description = "The optional name of the `zip` archive. This name will be appended by the `.zip` file extension, for example `January Financials.zip`.")
  public String getDownloadFileName() {
    return downloadFileName;
  }

  public void setDownloadFileName(String downloadFileName) {
    this.downloadFileName = downloadFileName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ZipDownloadRequest zipDownloadRequest = (ZipDownloadRequest) o;
    return Objects.equals(this.items, zipDownloadRequest.items) &&
        Objects.equals(this.downloadFileName, zipDownloadRequest.downloadFileName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(items, downloadFileName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ZipDownloadRequest {\n");
    
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    downloadFileName: ").append(toIndentedString(downloadFileName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
