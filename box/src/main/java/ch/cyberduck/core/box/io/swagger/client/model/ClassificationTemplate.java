/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.ClassificationTemplateFields;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * A metadata template that holds the security classifications defined by an enterprise.
 */
@Schema(description = "A metadata template that holds the security classifications defined by an enterprise.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class ClassificationTemplate {
  @JsonProperty("id")
  private String id = null;

  /**
   * &#x60;metadata_template&#x60;
   */
  public enum TypeEnum {
    TEMPLATE("metadata_template");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("scope")
  private String scope = null;

  /**
   * &#x60;securityClassification-6VMVochwUWo&#x60;
   */
  public enum TemplateKeyEnum {
    _6VMVOCHWUWO("securityClassification-6VMVochwUWo");

    private String value;

    TemplateKeyEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TemplateKeyEnum fromValue(String text) {
      for (TemplateKeyEnum b : TemplateKeyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("templateKey")
  private TemplateKeyEnum templateKey = null;

  /**
   * The name of this template as shown in web and mobile interfaces.
   */
  public enum DisplayNameEnum {
    CLASSIFICATION("Classification");

    private String value;

    DisplayNameEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static DisplayNameEnum fromValue(String text) {
      for (DisplayNameEnum b : DisplayNameEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("displayName")
  private DisplayNameEnum displayName = null;

  @JsonProperty("hidden")
  private Boolean hidden = null;

  @JsonProperty("copyInstanceOnItemCopy")
  private Boolean copyInstanceOnItemCopy = null;

  @JsonProperty("fields")
  private List<ClassificationTemplateFields> fields = null;

  public ClassificationTemplate id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the classification template.
   * @return id
  **/
  @Schema(example = "58063d82-4128-7b43-bba9-92f706befcdf", description = "The ID of the classification template.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ClassificationTemplate type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * &#x60;metadata_template&#x60;
   * @return type
  **/
  @Schema(example = "metadata_template", description = "`metadata_template`")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public ClassificationTemplate scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * The scope of the classification template. This is in the format &#x60;enterprise_{id}&#x60; where the &#x60;id&#x60; is the enterprise ID.
   * @return scope
  **/
  @Schema(example = "enterprise_123456", description = "The scope of the classification template. This is in the format `enterprise_{id}` where the `id` is the enterprise ID.")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public ClassificationTemplate templateKey(TemplateKeyEnum templateKey) {
    this.templateKey = templateKey;
    return this;
  }

   /**
   * &#x60;securityClassification-6VMVochwUWo&#x60;
   * @return templateKey
  **/
  @Schema(example = "securityClassification-6VMVochwUWo", description = "`securityClassification-6VMVochwUWo`")
  public TemplateKeyEnum getTemplateKey() {
    return templateKey;
  }

  public void setTemplateKey(TemplateKeyEnum templateKey) {
    this.templateKey = templateKey;
  }

  public ClassificationTemplate displayName(DisplayNameEnum displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The name of this template as shown in web and mobile interfaces.
   * @return displayName
  **/
  @Schema(example = "Classification", description = "The name of this template as shown in web and mobile interfaces.")
  public DisplayNameEnum getDisplayName() {
    return displayName;
  }

  public void setDisplayName(DisplayNameEnum displayName) {
    this.displayName = displayName;
  }

  public ClassificationTemplate hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * This template is always available in web and mobile interfaces.
   * @return hidden
  **/
  @Schema(example = "false", description = "This template is always available in web and mobile interfaces.")
  public Boolean isHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public ClassificationTemplate copyInstanceOnItemCopy(Boolean copyInstanceOnItemCopy) {
    this.copyInstanceOnItemCopy = copyInstanceOnItemCopy;
    return this;
  }

   /**
   * Classifications are always copied along when the file or folder is copied.
   * @return copyInstanceOnItemCopy
  **/
  @Schema(example = "true", description = "Classifications are always copied along when the file or folder is copied.")
  public Boolean isCopyInstanceOnItemCopy() {
    return copyInstanceOnItemCopy;
  }

  public void setCopyInstanceOnItemCopy(Boolean copyInstanceOnItemCopy) {
    this.copyInstanceOnItemCopy = copyInstanceOnItemCopy;
  }

  public ClassificationTemplate fields(List<ClassificationTemplateFields> fields) {
    this.fields = fields;
    return this;
  }

  public ClassificationTemplate addFieldsItem(ClassificationTemplateFields fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * A list of fields for this classification template. This includes only one field, the &#x60;Box__Security__Classification__Key&#x60;, which defines the different classifications available in this enterprise.
   * @return fields
  **/
  @Schema(description = "A list of fields for this classification template. This includes only one field, the `Box__Security__Classification__Key`, which defines the different classifications available in this enterprise.")
  public List<ClassificationTemplateFields> getFields() {
    return fields;
  }

  public void setFields(List<ClassificationTemplateFields> fields) {
    this.fields = fields;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClassificationTemplate classificationTemplate = (ClassificationTemplate) o;
    return Objects.equals(this.id, classificationTemplate.id) &&
        Objects.equals(this.type, classificationTemplate.type) &&
        Objects.equals(this.scope, classificationTemplate.scope) &&
        Objects.equals(this.templateKey, classificationTemplate.templateKey) &&
        Objects.equals(this.displayName, classificationTemplate.displayName) &&
        Objects.equals(this.hidden, classificationTemplate.hidden) &&
        Objects.equals(this.copyInstanceOnItemCopy, classificationTemplate.copyInstanceOnItemCopy) &&
        Objects.equals(this.fields, classificationTemplate.fields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, scope, templateKey, displayName, hidden, copyInstanceOnItemCopy, fields);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClassificationTemplate {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    templateKey: ").append(toIndentedString(templateKey)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    copyInstanceOnItemCopy: ").append(toIndentedString(copyInstanceOnItemCopy)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
