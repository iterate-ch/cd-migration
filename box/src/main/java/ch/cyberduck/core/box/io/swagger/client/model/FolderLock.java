/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.FolderLockLockedOperations;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * Folder locks define access restrictions placed by folder owners to prevent specific folders from being moved or deleted.
 */
@Schema(description = "Folder locks define access restrictions placed by folder owners to prevent specific folders from being moved or deleted.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class FolderLock {
  @JsonProperty("folder")
  private AllOfFolderLockFolder folder = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("created_by")
  private AllOfFolderLockCreatedBy createdBy = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("locked_operations")
  private FolderLockLockedOperations lockedOperations = null;

  @JsonProperty("lock_type")
  private String lockType = null;

  public FolderLock folder(AllOfFolderLockFolder folder) {
    this.folder = folder;
    return this;
  }

   /**
   * Get folder
   * @return folder
  **/
  @Schema(description = "")
  public AllOfFolderLockFolder getFolder() {
    return folder;
  }

  public void setFolder(AllOfFolderLockFolder folder) {
    this.folder = folder;
  }

  public FolderLock id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier for this folder lock.
   * @return id
  **/
  @Schema(example = "12345678", description = "The unique identifier for this folder lock.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public FolderLock type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The object type, always &#x60;folder_lock&#x60;.
   * @return type
  **/
  @Schema(example = "folder_lock", description = "The object type, always `folder_lock`.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public FolderLock createdBy(AllOfFolderLockCreatedBy createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @Schema(description = "")
  public AllOfFolderLockCreatedBy getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(AllOfFolderLockCreatedBy createdBy) {
    this.createdBy = createdBy;
  }

  public FolderLock createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * When the folder lock object was created.
   * @return createdAt
  **/
  @Schema(example = "2020-09-14T23:12:53Z", description = "When the folder lock object was created.")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public FolderLock lockedOperations(FolderLockLockedOperations lockedOperations) {
    this.lockedOperations = lockedOperations;
    return this;
  }

   /**
   * Get lockedOperations
   * @return lockedOperations
  **/
  @Schema(description = "")
  public FolderLockLockedOperations getLockedOperations() {
    return lockedOperations;
  }

  public void setLockedOperations(FolderLockLockedOperations lockedOperations) {
    this.lockedOperations = lockedOperations;
  }

  public FolderLock lockType(String lockType) {
    this.lockType = lockType;
    return this;
  }

   /**
   * The lock type, always &#x60;freeze&#x60;.
   * @return lockType
  **/
  @Schema(example = "freeze", description = "The lock type, always `freeze`.")
  public String getLockType() {
    return lockType;
  }

  public void setLockType(String lockType) {
    this.lockType = lockType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FolderLock folderLock = (FolderLock) o;
    return Objects.equals(this.folder, folderLock.folder) &&
        Objects.equals(this.id, folderLock.id) &&
        Objects.equals(this.type, folderLock.type) &&
        Objects.equals(this.createdBy, folderLock.createdBy) &&
        Objects.equals(this.createdAt, folderLock.createdAt) &&
        Objects.equals(this.lockedOperations, folderLock.lockedOperations) &&
        Objects.equals(this.lockType, folderLock.lockType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(folder, id, type, createdBy, createdAt, lockedOperations, lockType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FolderLock {\n");
    
    sb.append("    folder: ").append(toIndentedString(folder)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lockedOperations: ").append(toIndentedString(lockedOperations)).append("\n");
    sb.append("    lockType: ").append(toIndentedString(lockType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
