/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * Additional information about the classification.
 */
@Schema(description = "Additional information about the classification.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class MetadataTemplatesschemaclassificationsStaticConfigClassification {
  @JsonProperty("classificationDefinition")
  private String classificationDefinition = null;

  @JsonProperty("colorID")
  private BigDecimal colorID = null;

  public MetadataTemplatesschemaclassificationsStaticConfigClassification classificationDefinition(String classificationDefinition) {
    this.classificationDefinition = classificationDefinition;
    return this;
  }

   /**
   * A longer description of the classification.
   * @return classificationDefinition
  **/
  @Schema(example = "Sensitive information", description = "A longer description of the classification.")
  public String getClassificationDefinition() {
    return classificationDefinition;
  }

  public void setClassificationDefinition(String classificationDefinition) {
    this.classificationDefinition = classificationDefinition;
  }

  public MetadataTemplatesschemaclassificationsStaticConfigClassification colorID(BigDecimal colorID) {
    this.colorID = colorID;
    return this;
  }

   /**
   * An identifier used to assign a color to a classification label.  Mapping between a &#x60;colorID&#x60; and a color may change without notice. Currently, the color mappings are as follows.  * &#x60;0&#x60;: Yellow * &#x60;1&#x60;: Orange * &#x60;2&#x60;: Watermelon red * &#x60;3&#x60;: Purple rain * &#x60;4&#x60;: Light blue * &#x60;5&#x60;: Dark blue * &#x60;6&#x60;: Light green * &#x60;7&#x60;: Gray
   * @return colorID
  **/
  @Schema(example = "4", description = "An identifier used to assign a color to a classification label.  Mapping between a `colorID` and a color may change without notice. Currently, the color mappings are as follows.  * `0`: Yellow * `1`: Orange * `2`: Watermelon red * `3`: Purple rain * `4`: Light blue * `5`: Dark blue * `6`: Light green * `7`: Gray")
  public BigDecimal getColorID() {
    return colorID;
  }

  public void setColorID(BigDecimal colorID) {
    this.colorID = colorID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetadataTemplatesschemaclassificationsStaticConfigClassification metadataTemplatesschemaclassificationsStaticConfigClassification = (MetadataTemplatesschemaclassificationsStaticConfigClassification) o;
    return Objects.equals(this.classificationDefinition, metadataTemplatesschemaclassificationsStaticConfigClassification.classificationDefinition) &&
        Objects.equals(this.colorID, metadataTemplatesschemaclassificationsStaticConfigClassification.colorID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(classificationDefinition, colorID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetadataTemplatesschemaclassificationsStaticConfigClassification {\n");
    
    sb.append("    classificationDefinition: ").append(toIndentedString(classificationDefinition)).append("\n");
    sb.append("    colorID: ").append(toIndentedString(colorID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
