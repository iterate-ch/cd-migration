/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.ClassificationTemplateOptions;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * The metadata template field that represents the available classifications.
 */
@Schema(description = "The metadata template field that represents the available classifications.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class ClassificationTemplateFields {
  @JsonProperty("id")
  private String id = null;

  /**
   * &#x60;enum&#x60;
   */
  public enum TypeEnum {
    ENUM("enum");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  /**
   * &#x60;Box__Security__Classification__Key&#x60;
   */
  public enum KeyEnum {
    KEY("Box__Security__Classification__Key");

    private String value;

    KeyEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static KeyEnum fromValue(String text) {
      for (KeyEnum b : KeyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("key")
  private KeyEnum key = null;

  /**
   * &#x60;Classification&#x60;
   */
  public enum DisplayNameEnum {
    CLASSIFICATION("Classification");

    private String value;

    DisplayNameEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static DisplayNameEnum fromValue(String text) {
      for (DisplayNameEnum b : DisplayNameEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("displayName")
  private DisplayNameEnum displayName = null;

  @JsonProperty("hidden")
  private Boolean hidden = null;

  @JsonProperty("options")
  private List<ClassificationTemplateOptions> options = null;

  public ClassificationTemplateFields id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique ID of the field.
   * @return id
  **/
  @Schema(example = "822227e0-47a5-921b-88a8-494760b2e6d2", description = "The unique ID of the field.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ClassificationTemplateFields type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * &#x60;enum&#x60;
   * @return type
  **/
  @Schema(example = "enum", description = "`enum`")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public ClassificationTemplateFields key(KeyEnum key) {
    this.key = key;
    return this;
  }

   /**
   * &#x60;Box__Security__Classification__Key&#x60;
   * @return key
  **/
  @Schema(example = "Box__Security__Classification__Key", description = "`Box__Security__Classification__Key`")
  public KeyEnum getKey() {
    return key;
  }

  public void setKey(KeyEnum key) {
    this.key = key;
  }

  public ClassificationTemplateFields displayName(DisplayNameEnum displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * &#x60;Classification&#x60;
   * @return displayName
  **/
  @Schema(example = "Classification", description = "`Classification`")
  public DisplayNameEnum getDisplayName() {
    return displayName;
  }

  public void setDisplayName(DisplayNameEnum displayName) {
    this.displayName = displayName;
  }

  public ClassificationTemplateFields hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Classifications are always visible to web and mobile users.
   * @return hidden
  **/
  @Schema(example = "false", description = "Classifications are always visible to web and mobile users.")
  public Boolean isHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public ClassificationTemplateFields options(List<ClassificationTemplateOptions> options) {
    this.options = options;
    return this;
  }

  public ClassificationTemplateFields addOptionsItem(ClassificationTemplateOptions optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * A list of classifications available in this enterprise.
   * @return options
  **/
  @Schema(description = "A list of classifications available in this enterprise.")
  public List<ClassificationTemplateOptions> getOptions() {
    return options;
  }

  public void setOptions(List<ClassificationTemplateOptions> options) {
    this.options = options;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClassificationTemplateFields classificationTemplateFields = (ClassificationTemplateFields) o;
    return Objects.equals(this.id, classificationTemplateFields.id) &&
        Objects.equals(this.type, classificationTemplateFields.type) &&
        Objects.equals(this.key, classificationTemplateFields.key) &&
        Objects.equals(this.displayName, classificationTemplateFields.displayName) &&
        Objects.equals(this.hidden, classificationTemplateFields.hidden) &&
        Objects.equals(this.options, classificationTemplateFields.options);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, key, displayName, hidden, options);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClassificationTemplateFields {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
