/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * Device pins allow enterprises to control what devices can use native Box applications.
 */
@Schema(description = "Device pins allow enterprises to control what devices can use native Box applications.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class DevicePinner {
  @JsonProperty("id")
  private String id = null;

  /**
   * &#x60;device_pinner&#x60;
   */
  public enum TypeEnum {
    PINNER("device_pinner");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("owned_by")
  private AllOfDevicePinnerOwnedBy ownedBy = null;

  @JsonProperty("product_name")
  private String productName = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("modified_at")
  private DateTime modifiedAt = null;

  public DevicePinner id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier for this device pin.
   * @return id
  **/
  @Schema(example = "11446498", description = "The unique identifier for this device pin.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DevicePinner type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * &#x60;device_pinner&#x60;
   * @return type
  **/
  @Schema(example = "device_pinner", description = "`device_pinner`")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public DevicePinner ownedBy(AllOfDevicePinnerOwnedBy ownedBy) {
    this.ownedBy = ownedBy;
    return this;
  }

   /**
   * Get ownedBy
   * @return ownedBy
  **/
  @Schema(description = "")
  public AllOfDevicePinnerOwnedBy getOwnedBy() {
    return ownedBy;
  }

  public void setOwnedBy(AllOfDevicePinnerOwnedBy ownedBy) {
    this.ownedBy = ownedBy;
  }

  public DevicePinner productName(String productName) {
    this.productName = productName;
    return this;
  }

   /**
   * The type of device being pinned
   * @return productName
  **/
  @Schema(example = "iPad", description = "The type of device being pinned")
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }

  public DevicePinner createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The time the device pin was created
   * @return createdAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "The time the device pin was created")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public DevicePinner modifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * The time the device pin was modified
   * @return modifiedAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "The time the device pin was modified")
  public DateTime getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DevicePinner devicePinner = (DevicePinner) o;
    return Objects.equals(this.id, devicePinner.id) &&
        Objects.equals(this.type, devicePinner.type) &&
        Objects.equals(this.ownedBy, devicePinner.ownedBy) &&
        Objects.equals(this.productName, devicePinner.productName) &&
        Objects.equals(this.createdAt, devicePinner.createdAt) &&
        Objects.equals(this.modifiedAt, devicePinner.modifiedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, ownedBy, productName, createdAt, modifiedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DevicePinner {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    ownedBy: ").append(toIndentedString(ownedBy)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
