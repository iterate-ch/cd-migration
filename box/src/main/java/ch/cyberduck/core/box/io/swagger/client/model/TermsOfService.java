/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.TermsOfServiceMini;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * The root-level record that is supposed to represent a single Terms of Service.
 */
@Schema(description = "The root-level record that is supposed to represent a single Terms of Service.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class TermsOfService extends TermsOfServiceMini {
  /**
   * Whether these terms are enabled or not
   */
  public enum StatusEnum {
    ENABLED("enabled"),
    DISABLED("disabled");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("enterprise")
  private Object enterprise = null;

  /**
   * Whether to apply these terms to managed users or external users
   */
  public enum TosTypeEnum {
    MANAGED("managed"),
    EXTERNAL("external");

    private String value;

    TosTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TosTypeEnum fromValue(String text) {
      for (TosTypeEnum b : TosTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("tos_type")
  private TosTypeEnum tosType = null;

  @JsonProperty("text")
  private String text = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("modified_at")
  private DateTime modifiedAt = null;

  public TermsOfService status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Whether these terms are enabled or not
   * @return status
  **/
  @Schema(example = "enabled", description = "Whether these terms are enabled or not")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public TermsOfService enterprise(Object enterprise) {
    this.enterprise = enterprise;
    return this;
  }

   /**
   * Get enterprise
   * @return enterprise
  **/
  @Schema(description = "")
  public Object getEnterprise() {
    return enterprise;
  }

  public void setEnterprise(Object enterprise) {
    this.enterprise = enterprise;
  }

  public TermsOfService tosType(TosTypeEnum tosType) {
    this.tosType = tosType;
    return this;
  }

   /**
   * Whether to apply these terms to managed users or external users
   * @return tosType
  **/
  @Schema(example = "managed", description = "Whether to apply these terms to managed users or external users")
  public TosTypeEnum getTosType() {
    return tosType;
  }

  public void setTosType(TosTypeEnum tosType) {
    this.tosType = tosType;
  }

  public TermsOfService text(String text) {
    this.text = text;
    return this;
  }

   /**
   * The text for your terms and conditions. This text could be empty if the &#x60;status&#x60; is set to &#x60;disabled&#x60;.
   * @return text
  **/
  @Schema(example = "By using this service, you agree to ...", description = "The text for your terms and conditions. This text could be empty if the `status` is set to `disabled`.")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public TermsOfService createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * When the legal item was created
   * @return createdAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the legal item was created")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public TermsOfService modifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * When the legal item was modified.
   * @return modifiedAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the legal item was modified.")
  public DateTime getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TermsOfService termsOfService = (TermsOfService) o;
    return Objects.equals(this.status, termsOfService.status) &&
        Objects.equals(this.enterprise, termsOfService.enterprise) &&
        Objects.equals(this.tosType, termsOfService.tosType) &&
        Objects.equals(this.text, termsOfService.text) &&
        Objects.equals(this.createdAt, termsOfService.createdAt) &&
        Objects.equals(this.modifiedAt, termsOfService.modifiedAt) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, enterprise, tosType, text, createdAt, modifiedAt, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TermsOfService {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    enterprise: ").append(toIndentedString(enterprise)).append("\n");
    sb.append("    tosType: ").append(toIndentedString(tosType)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
