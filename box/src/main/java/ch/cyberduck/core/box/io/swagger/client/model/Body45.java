/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Body45
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class Body45 {
  @JsonProperty("url")
  private String url = null;

  @JsonProperty("parent")
  private AllOfbody45Parent parent = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("description")
  private String description = null;

  public Body45 url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The new URL that the web link links to. Must start with &#x60;\&quot;http://\&quot;&#x60; or &#x60;\&quot;https://\&quot;&#x60;.
   * @return url
  **/
  @Schema(example = "https://box.com", description = "The new URL that the web link links to. Must start with `\"http://\"` or `\"https://\"`.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public Body45 parent(AllOfbody45Parent parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @Schema(description = "")
  public AllOfbody45Parent getParent() {
    return parent;
  }

  public void setParent(AllOfbody45Parent parent) {
    this.parent = parent;
  }

  public Body45 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A new name for the web link. Defaults to the URL if not set.
   * @return name
  **/
  @Schema(example = "Box Website", description = "A new name for the web link. Defaults to the URL if not set.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Body45 description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A new description of the web link.
   * @return description
  **/
  @Schema(example = "Cloud Content Management", description = "A new description of the web link.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body45 body45 = (Body45) o;
    return Objects.equals(this.url, body45.url) &&
        Objects.equals(this.parent, body45.parent) &&
        Objects.equals(this.name, body45.name) &&
        Objects.equals(this.description, body45.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, parent, name, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body45 {\n");
    
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
