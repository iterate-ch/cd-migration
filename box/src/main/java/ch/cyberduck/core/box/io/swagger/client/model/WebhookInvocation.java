/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * The event that is sent to a webhook address when an event happens.
 */
@Schema(description = "The event that is sent to a webhook address when an event happens.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class WebhookInvocation {
  @JsonProperty("id")
  private String id = null;

  /**
   * &#x60;webhook_event&#x60;
   */
  public enum TypeEnum {
    EVENT("webhook_event");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("webhook")
  private AllOfWebhookInvocationWebhook webhook = null;

  @JsonProperty("created_by")
  private AllOfWebhookInvocationCreatedBy createdBy = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("trigger")
  private AllOfWebhookInvocationTrigger trigger = null;

  @JsonProperty("source")
  private AllOfWebhookInvocationSource source = null;

  public WebhookInvocation id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier for this webhook invocation
   * @return id
  **/
  @Schema(example = "11446498", description = "The unique identifier for this webhook invocation")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public WebhookInvocation type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * &#x60;webhook_event&#x60;
   * @return type
  **/
  @Schema(example = "webhook_event", description = "`webhook_event`")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public WebhookInvocation webhook(AllOfWebhookInvocationWebhook webhook) {
    this.webhook = webhook;
    return this;
  }

   /**
   * Get webhook
   * @return webhook
  **/
  @Schema(description = "")
  public AllOfWebhookInvocationWebhook getWebhook() {
    return webhook;
  }

  public void setWebhook(AllOfWebhookInvocationWebhook webhook) {
    this.webhook = webhook;
  }

  public WebhookInvocation createdBy(AllOfWebhookInvocationCreatedBy createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @Schema(description = "")
  public AllOfWebhookInvocationCreatedBy getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(AllOfWebhookInvocationCreatedBy createdBy) {
    this.createdBy = createdBy;
  }

  public WebhookInvocation createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * A timestamp identifying the time that the webhook event was triggered.
   * @return createdAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "A timestamp identifying the time that the webhook event was triggered.")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public WebhookInvocation trigger(AllOfWebhookInvocationTrigger trigger) {
    this.trigger = trigger;
    return this;
  }

   /**
   * Get trigger
   * @return trigger
  **/
  @Schema(description = "")
  public AllOfWebhookInvocationTrigger getTrigger() {
    return trigger;
  }

  public void setTrigger(AllOfWebhookInvocationTrigger trigger) {
    this.trigger = trigger;
  }

  public WebhookInvocation source(AllOfWebhookInvocationSource source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public AllOfWebhookInvocationSource getSource() {
    return source;
  }

  public void setSource(AllOfWebhookInvocationSource source) {
    this.source = source;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookInvocation webhookInvocation = (WebhookInvocation) o;
    return Objects.equals(this.id, webhookInvocation.id) &&
        Objects.equals(this.type, webhookInvocation.type) &&
        Objects.equals(this.webhook, webhookInvocation.webhook) &&
        Objects.equals(this.createdBy, webhookInvocation.createdBy) &&
        Objects.equals(this.createdAt, webhookInvocation.createdAt) &&
        Objects.equals(this.trigger, webhookInvocation.trigger) &&
        Objects.equals(this.source, webhookInvocation.source);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, webhook, createdBy, createdAt, trigger, source);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookInvocation {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    trigger: ").append(toIndentedString(trigger)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
