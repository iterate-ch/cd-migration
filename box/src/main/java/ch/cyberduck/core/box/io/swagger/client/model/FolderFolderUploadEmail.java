/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * FolderFolderUploadEmail
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class FolderFolderUploadEmail {
  /**
   * When this parameter has been set, users can email files to the email address that has been automatically created for this folder.  To create an email address, set this property either when creating or updating the folder.  When set to &#x60;collaborators&#x60;, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.  When set to &#x60;open&#x60; it will accept emails from any email address.
   */
  public enum AccessEnum {
    OPEN("open"),
    COLLABORATORS("collaborators");

    private String value;

    AccessEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static AccessEnum fromValue(String text) {
      for (AccessEnum b : AccessEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("access")
  private AccessEnum access = null;

  @JsonProperty("email")
  private String email = null;

  public FolderFolderUploadEmail access(AccessEnum access) {
    this.access = access;
    return this;
  }

   /**
   * When this parameter has been set, users can email files to the email address that has been automatically created for this folder.  To create an email address, set this property either when creating or updating the folder.  When set to &#x60;collaborators&#x60;, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.  When set to &#x60;open&#x60; it will accept emails from any email address.
   * @return access
  **/
  @Schema(example = "open", description = "When this parameter has been set, users can email files to the email address that has been automatically created for this folder.  To create an email address, set this property either when creating or updating the folder.  When set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.  When set to `open` it will accept emails from any email address.")
  public AccessEnum getAccess() {
    return access;
  }

  public void setAccess(AccessEnum access) {
    this.access = access;
  }

  public FolderFolderUploadEmail email(String email) {
    this.email = email;
    return this;
  }

   /**
   * The optional upload email address for this folder.
   * @return email
  **/
  @Schema(example = "upload.Contracts.asd7asd@u.box.com", description = "The optional upload email address for this folder.")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FolderFolderUploadEmail folderFolderUploadEmail = (FolderFolderUploadEmail) o;
    return Objects.equals(this.access, folderFolderUploadEmail.access) &&
        Objects.equals(this.email, folderFolderUploadEmail.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(access, email);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FolderFolderUploadEmail {\n");
    
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
