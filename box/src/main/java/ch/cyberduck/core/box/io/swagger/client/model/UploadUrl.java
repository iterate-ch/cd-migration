/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * The details for the upload session for the file.
 */
@Schema(description = "The details for the upload session for the file.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class UploadUrl {
  @JsonProperty("upload_url")
  private String uploadUrl = null;

  @JsonProperty("upload_token")
  private String uploadToken = null;

  public UploadUrl uploadUrl(String uploadUrl) {
    this.uploadUrl = uploadUrl;
    return this;
  }

   /**
   * A URL for an upload session that can be used to upload the file.
   * @return uploadUrl
  **/
  @Schema(example = "https://upload-las.app.box.com/api/2.0/files/content?upload_session_id=1234", description = "A URL for an upload session that can be used to upload the file.")
  public String getUploadUrl() {
    return uploadUrl;
  }

  public void setUploadUrl(String uploadUrl) {
    this.uploadUrl = uploadUrl;
  }

  public UploadUrl uploadToken(String uploadToken) {
    this.uploadToken = uploadToken;
    return this;
  }

   /**
   * An optional access token to use to upload the file
   * @return uploadToken
  **/
  @Schema(example = "Pc3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQP", description = "An optional access token to use to upload the file")
  public String getUploadToken() {
    return uploadToken;
  }

  public void setUploadToken(String uploadToken) {
    this.uploadToken = uploadToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadUrl uploadUrl = (UploadUrl) o;
    return Objects.equals(this.uploadUrl, uploadUrl.uploadUrl) &&
        Objects.equals(this.uploadToken, uploadUrl.uploadToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uploadUrl, uploadToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadUrl {\n");
    
    sb.append("    uploadUrl: ").append(toIndentedString(uploadUrl)).append("\n");
    sb.append("    uploadToken: ").append(toIndentedString(uploadToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
