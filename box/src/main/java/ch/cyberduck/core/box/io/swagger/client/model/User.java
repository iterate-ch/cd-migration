/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.UserMini;
import ch.cyberduck.core.box.io.swagger.client.model.UserNotificationEmail;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * A standard representation of a user, as returned from any user API endpoints by default
 */
@Schema(description = "A standard representation of a user, as returned from any user API endpoints by default")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class User extends UserMini {
  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("modified_at")
  private DateTime modifiedAt = null;

  @JsonProperty("language")
  private String language = null;

  @JsonProperty("timezone")
  private String timezone = null;

  @JsonProperty("space_amount")
  private Long spaceAmount = null;

  @JsonProperty("space_used")
  private Long spaceUsed = null;

  @JsonProperty("max_upload_size")
  private Long maxUploadSize = null;

  /**
   * The user&#x27;s account status
   */
  public enum StatusEnum {
    ACTIVE("active"),
    INACTIVE("inactive"),
    CANNOT_DELETE_EDIT("cannot_delete_edit"),
    CANNOT_DELETE_EDIT_UPLOAD("cannot_delete_edit_upload");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("job_title")
  private String jobTitle = null;

  @JsonProperty("phone")
  private String phone = null;

  @JsonProperty("address")
  private String address = null;

  @JsonProperty("avatar_url")
  private String avatarUrl = null;

  @JsonProperty("notification_email")
  private UserNotificationEmail notificationEmail = null;

  public User createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * When the user object was created
   * @return createdAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the user object was created")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public User modifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * When the user object was last modified
   * @return modifiedAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the user object was last modified")
  public DateTime getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  public User language(String language) {
    this.language = language;
    return this;
  }

   /**
   * The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format.
   * @return language
  **/
  @Schema(example = "en", description = "The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format.")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public User timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * The user&#x27;s timezone
   * @return timezone
  **/
  @Schema(example = "Africa/Bujumbura", description = "The user's timezone")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public User spaceAmount(Long spaceAmount) {
    this.spaceAmount = spaceAmount;
    return this;
  }

   /**
   * The user’s total available space amount in bytes
   * @return spaceAmount
  **/
  @Schema(example = "11345156112", description = "The user’s total available space amount in bytes")
  public Long getSpaceAmount() {
    return spaceAmount;
  }

  public void setSpaceAmount(Long spaceAmount) {
    this.spaceAmount = spaceAmount;
  }

  public User spaceUsed(Long spaceUsed) {
    this.spaceUsed = spaceUsed;
    return this;
  }

   /**
   * The amount of space in use by the user
   * @return spaceUsed
  **/
  @Schema(example = "1237009912", description = "The amount of space in use by the user")
  public Long getSpaceUsed() {
    return spaceUsed;
  }

  public void setSpaceUsed(Long spaceUsed) {
    this.spaceUsed = spaceUsed;
  }

  public User maxUploadSize(Long maxUploadSize) {
    this.maxUploadSize = maxUploadSize;
    return this;
  }

   /**
   * The maximum individual file size in bytes the user can have
   * @return maxUploadSize
  **/
  @Schema(example = "2147483648", description = "The maximum individual file size in bytes the user can have")
  public Long getMaxUploadSize() {
    return maxUploadSize;
  }

  public void setMaxUploadSize(Long maxUploadSize) {
    this.maxUploadSize = maxUploadSize;
  }

  public User status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The user&#x27;s account status
   * @return status
  **/
  @Schema(example = "active", description = "The user's account status")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public User jobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * The user’s job title
   * @return jobTitle
  **/
  @Schema(example = "CEO", description = "The user’s job title")
  public String getJobTitle() {
    return jobTitle;
  }

  public void setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
  }

  public User phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * The user’s phone number
   * @return phone
  **/
  @Schema(example = "6509241374", description = "The user’s phone number")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public User address(String address) {
    this.address = address;
    return this;
  }

   /**
   * The user’s address
   * @return address
  **/
  @Schema(example = "900 Jefferson Ave, Redwood City, CA 94063", description = "The user’s address")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public User avatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

   /**
   * URL of the user’s avatar image
   * @return avatarUrl
  **/
  @Schema(example = "https://www.box.com/api/avatar/large/181216415", description = "URL of the user’s avatar image")
  public String getAvatarUrl() {
    return avatarUrl;
  }

  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }

  public User notificationEmail(UserNotificationEmail notificationEmail) {
    this.notificationEmail = notificationEmail;
    return this;
  }

   /**
   * Get notificationEmail
   * @return notificationEmail
  **/
  @Schema(description = "")
  public UserNotificationEmail getNotificationEmail() {
    return notificationEmail;
  }

  public void setNotificationEmail(UserNotificationEmail notificationEmail) {
    this.notificationEmail = notificationEmail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.createdAt, user.createdAt) &&
        Objects.equals(this.modifiedAt, user.modifiedAt) &&
        Objects.equals(this.language, user.language) &&
        Objects.equals(this.timezone, user.timezone) &&
        Objects.equals(this.spaceAmount, user.spaceAmount) &&
        Objects.equals(this.spaceUsed, user.spaceUsed) &&
        Objects.equals(this.maxUploadSize, user.maxUploadSize) &&
        Objects.equals(this.status, user.status) &&
        Objects.equals(this.jobTitle, user.jobTitle) &&
        Objects.equals(this.phone, user.phone) &&
        Objects.equals(this.address, user.address) &&
        Objects.equals(this.avatarUrl, user.avatarUrl) &&
        Objects.equals(this.notificationEmail, user.notificationEmail) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, modifiedAt, language, timezone, spaceAmount, spaceUsed, maxUploadSize, status, jobTitle, phone, address, avatarUrl, notificationEmail, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    spaceAmount: ").append(toIndentedString(spaceAmount)).append("\n");
    sb.append("    spaceUsed: ").append(toIndentedString(spaceUsed)).append("\n");
    sb.append("    maxUploadSize: ").append(toIndentedString(maxUploadSize)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    notificationEmail: ").append(toIndentedString(notificationEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
