/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.FileVersionMini;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * A standard representation of a file version
 */
@Schema(description = "A standard representation of a file version")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class FileVersion extends FileVersionMini {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("size")
  private Long size = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("modified_at")
  private DateTime modifiedAt = null;

  @JsonProperty("modified_by")
  private Object modifiedBy = null;

  @JsonProperty("trashed_at")
  private DateTime trashedAt = null;

  @JsonProperty("trashed_by")
  private Object trashedBy = null;

  @JsonProperty("restored_at")
  private DateTime restoredAt = null;

  @JsonProperty("restored_by")
  private Object restoredBy = null;

  @JsonProperty("purged_at")
  private DateTime purgedAt = null;

  @JsonProperty("uploader_display_name")
  private Object uploaderDisplayName = null;

  public FileVersion name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the file version
   * @return name
  **/
  @Schema(example = "tigers.jpeg", description = "The name of the file version")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FileVersion size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Size of the file version in bytes
   * @return size
  **/
  @Schema(example = "629644", description = "Size of the file version in bytes")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public FileVersion createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * When the file version object was created
   * @return createdAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the file version object was created")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public FileVersion modifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * When the file version object was last updated
   * @return modifiedAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the file version object was last updated")
  public DateTime getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  public FileVersion modifiedBy(Object modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Get modifiedBy
   * @return modifiedBy
  **/
  @Schema(description = "")
  public Object getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(Object modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public FileVersion trashedAt(DateTime trashedAt) {
    this.trashedAt = trashedAt;
    return this;
  }

   /**
   * When the file version object was trashed.
   * @return trashedAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the file version object was trashed.")
  public DateTime getTrashedAt() {
    return trashedAt;
  }

  public void setTrashedAt(DateTime trashedAt) {
    this.trashedAt = trashedAt;
  }

  public FileVersion trashedBy(Object trashedBy) {
    this.trashedBy = trashedBy;
    return this;
  }

   /**
   * Get trashedBy
   * @return trashedBy
  **/
  @Schema(description = "")
  public Object getTrashedBy() {
    return trashedBy;
  }

  public void setTrashedBy(Object trashedBy) {
    this.trashedBy = trashedBy;
  }

  public FileVersion restoredAt(DateTime restoredAt) {
    this.restoredAt = restoredAt;
    return this;
  }

   /**
   * When the file version was restored from the trash.
   * @return restoredAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the file version was restored from the trash.")
  public DateTime getRestoredAt() {
    return restoredAt;
  }

  public void setRestoredAt(DateTime restoredAt) {
    this.restoredAt = restoredAt;
  }

  public FileVersion restoredBy(Object restoredBy) {
    this.restoredBy = restoredBy;
    return this;
  }

   /**
   * Get restoredBy
   * @return restoredBy
  **/
  @Schema(description = "")
  public Object getRestoredBy() {
    return restoredBy;
  }

  public void setRestoredBy(Object restoredBy) {
    this.restoredBy = restoredBy;
  }

  public FileVersion purgedAt(DateTime purgedAt) {
    this.purgedAt = purgedAt;
    return this;
  }

   /**
   * When the file version object will be permanently deleted.
   * @return purgedAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the file version object will be permanently deleted.")
  public DateTime getPurgedAt() {
    return purgedAt;
  }

  public void setPurgedAt(DateTime purgedAt) {
    this.purgedAt = purgedAt;
  }

  public FileVersion uploaderDisplayName(Object uploaderDisplayName) {
    this.uploaderDisplayName = uploaderDisplayName;
    return this;
  }

   /**
   * Get uploaderDisplayName
   * @return uploaderDisplayName
  **/
  @Schema(description = "")
  public Object getUploaderDisplayName() {
    return uploaderDisplayName;
  }

  public void setUploaderDisplayName(Object uploaderDisplayName) {
    this.uploaderDisplayName = uploaderDisplayName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileVersion fileVersion = (FileVersion) o;
    return Objects.equals(this.name, fileVersion.name) &&
        Objects.equals(this.size, fileVersion.size) &&
        Objects.equals(this.createdAt, fileVersion.createdAt) &&
        Objects.equals(this.modifiedAt, fileVersion.modifiedAt) &&
        Objects.equals(this.modifiedBy, fileVersion.modifiedBy) &&
        Objects.equals(this.trashedAt, fileVersion.trashedAt) &&
        Objects.equals(this.trashedBy, fileVersion.trashedBy) &&
        Objects.equals(this.restoredAt, fileVersion.restoredAt) &&
        Objects.equals(this.restoredBy, fileVersion.restoredBy) &&
        Objects.equals(this.purgedAt, fileVersion.purgedAt) &&
        Objects.equals(this.uploaderDisplayName, fileVersion.uploaderDisplayName) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, size, createdAt, modifiedAt, modifiedBy, trashedAt, trashedBy, restoredAt, restoredBy, purgedAt, uploaderDisplayName, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileVersion {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    trashedAt: ").append(toIndentedString(trashedAt)).append("\n");
    sb.append("    trashedBy: ").append(toIndentedString(trashedBy)).append("\n");
    sb.append("    restoredAt: ").append(toIndentedString(restoredAt)).append("\n");
    sb.append("    restoredBy: ").append(toIndentedString(restoredBy)).append("\n");
    sb.append("    purgedAt: ").append(toIndentedString(purgedAt)).append("\n");
    sb.append("    uploaderDisplayName: ").append(toIndentedString(uploaderDisplayName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
