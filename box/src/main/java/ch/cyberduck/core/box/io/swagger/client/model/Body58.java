/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.SkillInvocationsskillIdFile;
import ch.cyberduck.core.box.io.swagger.client.model.SkillInvocationsskillIdFileVersion;
import ch.cyberduck.core.box.io.swagger.client.model.SkillInvocationsskillIdMetadata;
import ch.cyberduck.core.box.io.swagger.client.model.SkillInvocationsskillIdUsage;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Body58
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class Body58 {
  /**
   * Defines the status of this invocation. Set this to &#x60;success&#x60; when setting Skill cards.
   */
  public enum StatusEnum {
    INVOKED("invoked"),
    PROCESSING("processing"),
    SUCCESS("success"),
    TRANSIENT_FAILURE("transient_failure"),
    PERMANENT_FAILURE("permanent_failure");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("metadata")
  private SkillInvocationsskillIdMetadata metadata = null;

  @JsonProperty("file")
  private SkillInvocationsskillIdFile file = null;

  @JsonProperty("file_version")
  private SkillInvocationsskillIdFileVersion fileVersion = null;

  @JsonProperty("usage")
  private SkillInvocationsskillIdUsage usage = null;

  public Body58 status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Defines the status of this invocation. Set this to &#x60;success&#x60; when setting Skill cards.
   * @return status
  **/
  @Schema(example = "success", required = true, description = "Defines the status of this invocation. Set this to `success` when setting Skill cards.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Body58 metadata(SkillInvocationsskillIdMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @Schema(required = true, description = "")
  public SkillInvocationsskillIdMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(SkillInvocationsskillIdMetadata metadata) {
    this.metadata = metadata;
  }

  public Body58 file(SkillInvocationsskillIdFile file) {
    this.file = file;
    return this;
  }

   /**
   * Get file
   * @return file
  **/
  @Schema(required = true, description = "")
  public SkillInvocationsskillIdFile getFile() {
    return file;
  }

  public void setFile(SkillInvocationsskillIdFile file) {
    this.file = file;
  }

  public Body58 fileVersion(SkillInvocationsskillIdFileVersion fileVersion) {
    this.fileVersion = fileVersion;
    return this;
  }

   /**
   * Get fileVersion
   * @return fileVersion
  **/
  @Schema(description = "")
  public SkillInvocationsskillIdFileVersion getFileVersion() {
    return fileVersion;
  }

  public void setFileVersion(SkillInvocationsskillIdFileVersion fileVersion) {
    this.fileVersion = fileVersion;
  }

  public Body58 usage(SkillInvocationsskillIdUsage usage) {
    this.usage = usage;
    return this;
  }

   /**
   * Get usage
   * @return usage
  **/
  @Schema(description = "")
  public SkillInvocationsskillIdUsage getUsage() {
    return usage;
  }

  public void setUsage(SkillInvocationsskillIdUsage usage) {
    this.usage = usage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body58 body58 = (Body58) o;
    return Objects.equals(this.status, body58.status) &&
        Objects.equals(this.metadata, body58.metadata) &&
        Objects.equals(this.file, body58.file) &&
        Objects.equals(this.fileVersion, body58.fileVersion) &&
        Objects.equals(this.usage, body58.usage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, metadata, file, fileVersion, usage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body58 {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    fileVersion: ").append(toIndentedString(fileVersion)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
