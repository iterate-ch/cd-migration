/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.box.io.swagger.client.model.CollaborationAcceptanceRequirementsStatusStrongPasswordRequirement;
import ch.cyberduck.core.box.io.swagger.client.model.CollaborationAcceptanceRequirementsStatusTermsOfServiceRequirement;
import ch.cyberduck.core.box.io.swagger.client.model.CollaborationAcceptanceRequirementsStatusTwoFactorAuthenticationRequirement;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * CollaborationAcceptanceRequirementsStatus
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-25T11:35:18.602705+01:00[Europe/Zurich]")
public class CollaborationAcceptanceRequirementsStatus {
  @JsonProperty("terms_of_service_requirement")
  private CollaborationAcceptanceRequirementsStatusTermsOfServiceRequirement termsOfServiceRequirement = null;

  @JsonProperty("strong_password_requirement")
  private CollaborationAcceptanceRequirementsStatusStrongPasswordRequirement strongPasswordRequirement = null;

  @JsonProperty("two_factor_authentication_requirement")
  private CollaborationAcceptanceRequirementsStatusTwoFactorAuthenticationRequirement twoFactorAuthenticationRequirement = null;

  public CollaborationAcceptanceRequirementsStatus termsOfServiceRequirement(CollaborationAcceptanceRequirementsStatusTermsOfServiceRequirement termsOfServiceRequirement) {
    this.termsOfServiceRequirement = termsOfServiceRequirement;
    return this;
  }

   /**
   * Get termsOfServiceRequirement
   * @return termsOfServiceRequirement
  **/
  @Schema(description = "")
  public CollaborationAcceptanceRequirementsStatusTermsOfServiceRequirement getTermsOfServiceRequirement() {
    return termsOfServiceRequirement;
  }

  public void setTermsOfServiceRequirement(CollaborationAcceptanceRequirementsStatusTermsOfServiceRequirement termsOfServiceRequirement) {
    this.termsOfServiceRequirement = termsOfServiceRequirement;
  }

  public CollaborationAcceptanceRequirementsStatus strongPasswordRequirement(CollaborationAcceptanceRequirementsStatusStrongPasswordRequirement strongPasswordRequirement) {
    this.strongPasswordRequirement = strongPasswordRequirement;
    return this;
  }

   /**
   * Get strongPasswordRequirement
   * @return strongPasswordRequirement
  **/
  @Schema(description = "")
  public CollaborationAcceptanceRequirementsStatusStrongPasswordRequirement getStrongPasswordRequirement() {
    return strongPasswordRequirement;
  }

  public void setStrongPasswordRequirement(CollaborationAcceptanceRequirementsStatusStrongPasswordRequirement strongPasswordRequirement) {
    this.strongPasswordRequirement = strongPasswordRequirement;
  }

  public CollaborationAcceptanceRequirementsStatus twoFactorAuthenticationRequirement(CollaborationAcceptanceRequirementsStatusTwoFactorAuthenticationRequirement twoFactorAuthenticationRequirement) {
    this.twoFactorAuthenticationRequirement = twoFactorAuthenticationRequirement;
    return this;
  }

   /**
   * Get twoFactorAuthenticationRequirement
   * @return twoFactorAuthenticationRequirement
  **/
  @Schema(description = "")
  public CollaborationAcceptanceRequirementsStatusTwoFactorAuthenticationRequirement getTwoFactorAuthenticationRequirement() {
    return twoFactorAuthenticationRequirement;
  }

  public void setTwoFactorAuthenticationRequirement(CollaborationAcceptanceRequirementsStatusTwoFactorAuthenticationRequirement twoFactorAuthenticationRequirement) {
    this.twoFactorAuthenticationRequirement = twoFactorAuthenticationRequirement;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CollaborationAcceptanceRequirementsStatus collaborationAcceptanceRequirementsStatus = (CollaborationAcceptanceRequirementsStatus) o;
    return Objects.equals(this.termsOfServiceRequirement, collaborationAcceptanceRequirementsStatus.termsOfServiceRequirement) &&
        Objects.equals(this.strongPasswordRequirement, collaborationAcceptanceRequirementsStatus.strongPasswordRequirement) &&
        Objects.equals(this.twoFactorAuthenticationRequirement, collaborationAcceptanceRequirementsStatus.twoFactorAuthenticationRequirement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(termsOfServiceRequirement, strongPasswordRequirement, twoFactorAuthenticationRequirement);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CollaborationAcceptanceRequirementsStatus {\n");
    
    sb.append("    termsOfServiceRequirement: ").append(toIndentedString(termsOfServiceRequirement)).append("\n");
    sb.append("    strongPasswordRequirement: ").append(toIndentedString(strongPasswordRequirement)).append("\n");
    sb.append("    twoFactorAuthenticationRequirement: ").append(toIndentedString(twoFactorAuthenticationRequirement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
